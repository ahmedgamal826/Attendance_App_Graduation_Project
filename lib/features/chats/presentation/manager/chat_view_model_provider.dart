// // // // // // // // // // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // // // //   String? _errorMessage;

// // // // // // // // // // // // // // // // // // // // // // // //   // List<ChatModel> get chats => _chats;
// // // // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;

// // // // // // // // // // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // // // // // // // // // //     fetchChats();
// // // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // // //   Future<void> fetchChats() async {
// // // // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // // // // //       _chats = await _chatRepository.getChats();
// // // // // // // // // // // // // // // // // // // // // // // //       _filteredChats = []; // reset filter
// // // // // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // // // // // // // // // //     File? image, // Keeping this optional for potential image handling
// // // // // // // // // // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // // // // // // //         avatar: avatar, // Could use image?.path if an image is provided
// // // // // // // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // // // // // // //       await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // // // // // // // // // //       _chats.add(newChat);
// // // // // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // // //   Future<void> deleteChat(int index) async {
// // // // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // // // // //       final chatToDelete = _chats[index];
// // // // // // // // // // // // // // // // // // // // // // // //       await _chatRepository
// // // // // // // // // // // // // // // // // // // // // // // //           .deleteChat(chatToDelete); // استدعاء الـ repository لحذف الشات
// // // // // // // // // // // // // // // // // // // // // // // //       _chats.removeAt(index); // حذف الشات من القايمة المحلية
// // // // // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // // // // // // // // import 'package:cloud_firestore/cloud_firestore.dart';
// // // // // // // // // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // // //   String? _errorMessage;

// // // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // // // // // // // // //     fetchChats();
// // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // //   Future<void> fetchChats() async {
// // // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // // // //       _chats = await _chatRepository.getChats();
// // // // // // // // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // // // // // // // // // //     required String email, // إضافة المعلم email
// // // // // // // // // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // // // // // // // // //         id: '', // سيتم تعيينه تلقائيًا من Firestore
// // // // // // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // // // // // //         email: email, // استخدام الإيميل المرسل
// // // // // // // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // // // // // //       await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // // // // // // // // //       _chats.add(newChat); // Update local list (optional, can fetch again)
// // // // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // // // // // // // // // //     final message = {
// // // // // // // // // // // // // // // // // // // // // // //       'text': text,
// // // // // // // // // // // // // // // // // // // // // // //       'isMe': isMe,
// // // // // // // // // // // // // // // // // // // // // // //       'time': FieldValue.serverTimestamp(),
// // // // // // // // // // // // // // // // // // // // // // //     };
// // // // // // // // // // // // // // // // // // // // // // //     await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // // // // // // // // // //     fetchChats(); // Refresh chats to update the last message
// // // // // // // // // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // // // // // // // import 'package:cloud_firestore/cloud_firestore.dart';
// // // // // // // // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;

// // // // // // // // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // // // // //       await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // // // // // // // // //     final message = {
// // // // // // // // // // // // // // // // // // // // // //       'text': text,
// // // // // // // // // // // // // // // // // // // // // //       'isMe': isMe,
// // // // // // // // // // // // // // // // // // // // // //       'time': FieldValue.serverTimestamp(),
// // // // // // // // // // // // // // // // // // // // // //     };
// // // // // // // // // // // // // // // // // // // // // //     await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // // // // // // // // //     // No need to fetch again, Stream will handle it
// // // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // // // // // // import 'package:cloud_firestore/cloud_firestore.dart';
// // // // // // // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;

// // // // // // // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // // // // // // // //     final message = {
// // // // // // // // // // // // // // // // // // // // //       'text': text,
// // // // // // // // // // // // // // // // // // // // //       'isMe': isMe,
// // // // // // // // // // // // // // // // // // // // //       'time': FieldValue.serverTimestamp(),
// // // // // // // // // // // // // // // // // // // // //     };
// // // // // // // // // // // // // // // // // // // // //     await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // // // // // import 'package:cloud_firestore/cloud_firestore.dart';
// // // // // // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;

// // // // // // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // // //       final message = {
// // // // // // // // // // // // // // // // // // // //         'text': text,
// // // // // // // // // // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // // // // // // // // // //         'time': DateTime.now().toIso8601String(),
// // // // // // // // // // // // // // // // // // // //       };
// // // // // // // // // // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // // // // // // //       // تحديث محلي للدردشة
// // // // // // // // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // // // // // // // //         final updatedMessages =
// // // // // // // // // // // // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // // // // // // // // // // //               ..add(message);
// // // // // // // // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // // // // // // // //           message: text,
// // // // // // // // // // // // // // // // // // // //           time: DateTime.now().toString().substring(11, 16),
// // // // // // // // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // // // // // // // //         );
// // // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // // //       }
// // // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // // // // import 'package:cloud_firestore/cloud_firestore.dart';
// // // // // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;

// // // // // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // // //       final message = {
// // // // // // // // // // // // // // // // // // //         'text': text,
// // // // // // // // // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // // // // // // // // //         'time': DateTime.now().toIso8601String(),
// // // // // // // // // // // // // // // // // // //       };
// // // // // // // // // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // // // // // //       // تحديث محلي للدردشة
// // // // // // // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)..add(message);
// // // // // // // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // // // // // // //           message: text,
// // // // // // // // // // // // // // // // // // //           time: DateTime.now().toString().substring(11, 16),
// // // // // // // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1, // زيادة عدد الرسائل غير المقروءة
// // // // // // // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // // // // // // //         );
// // // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // // //       }
// // // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // // // import 'package:cloud_firestore/cloud_firestore.dart';
// // // // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;

// // // // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // // //     // notifyListeners(); // تم تعليقها عشان مينشأش إعادة بناء فورية

// // // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // // //       final message = {
// // // // // // // // // // // // // // // // // //         'text': text,
// // // // // // // // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // // // // // // // //         'time': DateTime.now().toIso8601String(), // Firestore بيستخدم التنسيق الكامل
// // // // // // // // // // // // // // // // // //       };
// // // // // // // // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // // // // //       // تحديث محلي للدردشة
// // // // // // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)..add(message);
// // // // // // // // // // // // // // // // // //         final now = DateTime.now();
// // // // // // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // // // // // //           message: text,
// // // // // // // // // // // // // // // // // //           time: '${now.hour.toString().padLeft(2, '0')}:${now.minute.toString().padLeft(2, '0')}', // 05:25
// // // // // // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // // // // // //         );
// // // // // // // // // // // // // // // // // //         // notifyListeners(); // تم تعليقها عشان مينشأش إعادة بناء
// // // // // // // // // // // // // // // // // //       }
// // // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;

// // // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // // //     // notifyListeners(); // تم تعليقها عشان مينشأش إعادة بناء فورية

// // // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // // //       final message = {
// // // // // // // // // // // // // // // // //         'text': text,
// // // // // // // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // // // // // // //         'time': DateTime.now().toIso8601String(), // Firestore بيستخدم التنسيق الكامل
// // // // // // // // // // // // // // // // //       };
// // // // // // // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // // // //       // تحديث محلي للدردشة
// // // // // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)..add(message);
// // // // // // // // // // // // // // // // //         final now = DateTime.now();
// // // // // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // // // // //           message: text,
// // // // // // // // // // // // // // // // //           time: '${now.hour.toString().padLeft(2, '0')}:${now.minute.toString().padLeft(2, '0')}', // 05:25 (24 ساعة)
// // // // // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // // // // //         );
// // // // // // // // // // // // // // // // //         // notifyListeners(); // تم تعليقها عشان مينشأش إعادة بناء
// // // // // // // // // // // // // // // // //       }
// // // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // // import 'package:flutter/material.dart';

// // // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;

// // // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   // إضافة دالة getChatsStream
// // // // // // // // // // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // // // // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // //       final message = {
// // // // // // // // // // // // // // // //         'text': text,
// // // // // // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // // // // // //         'time': DateTime.now().toIso8601String(),
// // // // // // // // // // // // // // // //       };
// // // // // // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)..add(message);
// // // // // // // // // // // // // // // //         final now = DateTime.now();
// // // // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // // // //           message: text,
// // // // // // // // // // // // // // // //           time: '${now.hour.toString().padLeft(2, '0')}:${now.minute.toString().padLeft(2, '0')}',
// // // // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // // // //         );
// // // // // // // // // // // // // // // //       }
// // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   Future<void> deleteMessage(String chatId, Map<String, dynamic> message) async {
// // // // // // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // // //       await _chatRepository.deleteMessage(chatId, message);
// // // // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // // // // // // //           ..removeWhere((msg) =>
// // // // // // // // // // // // // // // //               msg['text'] == message['text'] &&
// // // // // // // // // // // // // // // //               msg['time'] == message['time'] &&
// // // // // // // // // // // // // // // //               msg['isMe'] == message['isMe']);
// // // // // // // // // // // // // // // //         final lastMessage = updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // // // //           message: lastMessage,
// // // // // // // // // // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // // // //         );
// // // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // // //       }
// // // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // // // // // // // // // //   final Uuid _uuid = const Uuid();

// // // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // //       },
// // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // // // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // // //       );
// // // // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // //       final message = {
// // // // // // // // // // // // // // //         'text': text,
// // // // // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // // // // //         'messageId': _uuid.v4(), // إضافة messageId فريد
// // // // // // // // // // // // // // //         'time': DateTime.now().toIso8601String(),
// // // // // // // // // // // // // // //       };
// // // // // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // // //         final updatedMessages =
// // // // // // // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // // // // // //               ..add(message);
// // // // // // // // // // // // // // //         final now = DateTime.now();
// // // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // // //           message: text,
// // // // // // // // // // // // // // //           time:
// // // // // // // // // // // // // // //               '${now.hour.toString().padLeft(2, '0')}:${now.minute.toString().padLeft(2, '0')}',
// // // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // // //         );
// // // // // // // // // // // // // // //       }
// // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   Future<void> deleteMessage(
// // // // // // // // // // // // // // //       String chatId, Map<String, dynamic> message) async {
// // // // // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // // //       await _chatRepository.deleteMessage(chatId, message);
// // // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // // //         final updatedMessages =
// // // // // // // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // // // // // //               ..removeWhere((msg) => msg['messageId'] == message['messageId']);
// // // // // // // // // // // // // // //         final lastMessage =
// // // // // // // // // // // // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // // //           message: lastMessage,
// // // // // // // // // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // // //         );
// // // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // // //       }
// // // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //   }

// // // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // // // // // // // // //   final Uuid _uuid = const Uuid();

// // // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // //       },
// // // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // //       },
// // // // // // // // // // // // // //     );
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // //       );
// // // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // // //       );
// // // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // //       final message = {
// // // // // // // // // // // // // //         'text': text,
// // // // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // // // //         'messageId': _uuid.v4(),
// // // // // // // // // // // // // //         'time': DateTime.now().toIso8601String(),
// // // // // // // // // // // // // //       };
// // // // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // //         final updatedMessages =
// // // // // // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // // // // //               ..add(message);
// // // // // // // // // // // // // //         final now = DateTime.now();
// // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // //           message: text,
// // // // // // // // // // // // // //           time:
// // // // // // // // // // // // // //               '${now.hour.toString().padLeft(2, '0')}:${now.minute.toString().padLeft(2, '0')}',
// // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // //         );
// // // // // // // // // // // // // //       }
// // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   Future<void> deleteMessage(
// // // // // // // // // // // // // //       String chatId, Map<String, dynamic> message) async {
// // // // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // // // //     try {
// // // // // // // // // // // // // //       await _chatRepository.deleteMessage(chatId, message);
// // // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // // //         final updatedMessages =
// // // // // // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // // // // //               ..removeWhere((msg) {
// // // // // // // // // // // // // //                 if (message.containsKey('messageId') &&
// // // // // // // // // // // // // //                     msg.containsKey('messageId')) {
// // // // // // // // // // // // // //                   return msg['messageId'] == message['messageId'];
// // // // // // // // // // // // // //                 }
// // // // // // // // // // // // // //                 // التعامل مع الرسايل القديمة بدون messageId
// // // // // // // // // // // // // //                 return msg['text'] == message['text'] &&
// // // // // // // // // // // // // //                     msg['time'] == message['time'] &&
// // // // // // // // // // // // // //                     msg['isMe'] == message['isMe'];
// // // // // // // // // // // // // //               });
// // // // // // // // // // // // // //         final lastMessage =
// // // // // // // // // // // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // // //           message: lastMessage,
// // // // // // // // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // // //         );
// // // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // // //       }
// // // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //   }

// // // // // // // // // // // // // //   @override
// // // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // // //   }
// // // // // // // // // // // // // // }

// // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // // // // // // // //   final Uuid _uuid = const Uuid();

// // // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // // //   String? get errorMessage => _errorMessage;

// // // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // // //       (chats) {
// // // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // //       },
// // // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // //       },
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // // //     } else {
// // // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // // //           .toList();
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // // //     required String name,
// // // // // // // // // // // // //     required String message,
// // // // // // // // // // // // //     required String time,
// // // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // // //     File? image,
// // // // // // // // // // // // //     required String email,
// // // // // // // // // // // // //   }) async {
// // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // //     try {
// // // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // // //         id: '',
// // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // //       );
// // // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // // //         name: name,
// // // // // // // // // // // // //         message: message,
// // // // // // // // // // // // //         time: time,
// // // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // // //         email: email,
// // // // // // // // // // // // //         messages: [],
// // // // // // // // // // // // //       );
// // // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // //     try {
// // // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // // //     try {
// // // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // // //     } finally {
// // // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // // //     try {
// // // // // // // // // // // // //       final message = {
// // // // // // // // // // // // //         'text': text,
// // // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // // //         'messageId': _uuid.v4(),
// // // // // // // // // // // // //         'time': DateTime.now().toIso8601String(),
// // // // // // // // // // // // //       };
// // // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)..add(message);
// // // // // // // // // // // // //         final now = DateTime.now();
// // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // //           message: text,
// // // // // // // // // // // // //           time: '${now.hour.toString().padLeft(2, '0')}:${now.minute.toString().padLeft(2, '0')}',
// // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // //         );
// // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // //       }
// // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> deleteMessage(String chatId, Map<String, dynamic> message) async {
// // // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // // //     try {
// // // // // // // // // // // // //       await _chatRepository.deleteMessage(chatId, message);
// // // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // // // //           ..removeWhere((msg) {
// // // // // // // // // // // // //             if (message.containsKey('messageId') && msg.containsKey('messageId')) {
// // // // // // // // // // // // //               return msg['messageId'] == message['messageId'];
// // // // // // // // // // // // //             }
// // // // // // // // // // // // //             return msg['text'] == message['text'] &&
// // // // // // // // // // // // //                 msg['time'] == message['time'] &&
// // // // // // // // // // // // //                 msg['isMe'] == message['isMe'];
// // // // // // // // // // // // //           });
// // // // // // // // // // // // //         final lastMessage = updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // // //           message: lastMessage,
// // // // // // // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // // //         );
// // // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // // //       }
// // // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // // //   List<Map<String, dynamic>> _localMessages = [];
// // // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // // // // // // //   final Uuid _uuid = const Uuid();
// // // // // // // // // // // //   final ScrollController _scrollController = ScrollController();
// // // // // // // // // // // //   final TextEditingController _messageController = TextEditingController();
// // // // // // // // // // // //   StreamSubscription? _messagesSubscription;

// // // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // // //   String? get errorMessage => _errorMessage;
// // // // // // // // // // // //   ScrollController get scrollController => _scrollController;
// // // // // // // // // // // //   TextEditingController get messageController => _messageController;

// // // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // // //       (chats) {
// // // // // // // // // // // //         _chats = chats;
// // // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // //       },
// // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // //       },
// // // // // // // // // // // //     );
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void initChatMessages(ChatModel chat) {
// // // // // // // // // // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // // // // // //       final time = DateTime.parse(msg['time']);
// // // // // // // // // // // //       final formattedTime = _formatTo12Hour(time);
// // // // // // // // // // // //       return {
// // // // // // // // // // // //         ...msg,
// // // // // // // // // // // //         'time': formattedTime,
// // // // // // // // // // // //         'originalTime': msg['time'],
// // // // // // // // // // // //       };
// // // // // // // // // // // //     }));
// // // // // // // // // // // //     _scrollToBottom(attempts: 5);
// // // // // // // // // // // //     _listenToMessages(chat.id);
// // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void _listenToMessages(String chatId) {
// // // // // // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // // // // // //     _messagesSubscription = getChatsStream().listen(
// // // // // // // // // // // //       (chats) {
// // // // // // // // // // // //         final chat = chats.firstWhere(
// // // // // // // // // // // //           (c) => c.id == chatId,
// // // // // // // // // // // //           orElse: () => ChatModel(
// // // // // // // // // // // //             id: chatId,
// // // // // // // // // // // //             name: '',
// // // // // // // // // // // //             message: '',
// // // // // // // // // // // //             time: '',
// // // // // // // // // // // //             unreadCount: 0,
// // // // // // // // // // // //             avatar: '',
// // // // // // // // // // // //             hasCheckmark: false,
// // // // // // // // // // // //             email: '',
// // // // // // // // // // // //             messages: [],
// // // // // // // // // // // //           ),
// // // // // // // // // // // //         );
// // // // // // // // // // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // // // // // //           final time = DateTime.parse(msg['time']);
// // // // // // // // // // // //           final formattedTime = _formatTo12Hour(time);
// // // // // // // // // // // //           return {
// // // // // // // // // // // //             ...msg,
// // // // // // // // // // // //             'time': formattedTime,
// // // // // // // // // // // //             'originalTime': msg['time'],
// // // // // // // // // // // //           };
// // // // // // // // // // // //         }));
// // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // //         _scrollToBottom(attempts: 5);
// // // // // // // // // // // //       },
// // // // // // // // // // // //       onError: (e) {
// // // // // // // // // // // //         _errorMessage = 'Failed to load messages: $e';
// // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // //       },
// // // // // // // // // // // //     );
// // // // // // // // // // // //   }

// // // // // // // // // // // //   String _formatTo12Hour(DateTime time) {
// // // // // // // // // // // //     final hour = time.hour % 12;
// // // // // // // // // // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // // // // // // // // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // // // // // // // // // //     final displayHour = hour == 0 ? 12 : hour;
// // // // // // // // // // // //     return '$displayHour:$minute $period';
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void _scrollToBottom({int attempts = 5}) {
// // // // // // // // // // // //     if (attempts <= 0) return;

// // // // // // // // // // // //     if (_scrollController.hasClients) {
// // // // // // // // // // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // // // // // // // // // //       _scrollController.animateTo(
// // // // // // // // // // // //         currentExtent,
// // // // // // // // // // // //         duration: const Duration(milliseconds: 300),
// // // // // // // // // // // //         curve: Curves.easeOut,
// // // // // // // // // // // //       );
// // // // // // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // // // // // //         if (_scrollController.hasClients &&
// // // // // // // // // // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // // // // // // // // // //           _scrollToBottom(attempts: attempts - 1);
// // // // // // // // // // // //         }
// // // // // // // // // // // //       });
// // // // // // // // // // // //     } else {
// // // // // // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // // // // // //         _scrollToBottom(attempts: attempts - 1);
// // // // // // // // // // // //       });
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // // //     } else {
// // // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // // //           .toList();
// // // // // // // // // // // //     }
// // // // // // // // // // // //     notifyListeners();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // // //     required String name,
// // // // // // // // // // // //     required String message,
// // // // // // // // // // // //     required String time,
// // // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // // //     required String avatar,
// // // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // // //     File? image,
// // // // // // // // // // // //     required String email,
// // // // // // // // // // // //   }) async {
// // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // //     try {
// // // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // // //         id: '',
// // // // // // // // // // // //         name: name,
// // // // // // // // // // // //         message: message,
// // // // // // // // // // // //         time: time,
// // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // //         email: email,
// // // // // // // // // // // //         messages: [],
// // // // // // // // // // // //       );
// // // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // // //         name: name,
// // // // // // // // // // // //         message: message,
// // // // // // // // // // // //         time: time,
// // // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // // //         email: email,
// // // // // // // // // // // //         messages: [],
// // // // // // // // // // // //       );
// // // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // // //     } finally {
// // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // //     try {
// // // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // // //     } finally {
// // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // // //     notifyListeners();

// // // // // // // // // // // //     try {
// // // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // // //     } finally {
// // // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // // //     if (text.trim().isEmpty) return;

// // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // //     try {
// // // // // // // // // // // //       final now = DateTime.now();
// // // // // // // // // // // //       final formattedTime = _formatTo12Hour(now);
// // // // // // // // // // // //       final message = {
// // // // // // // // // // // //         'text': text.trim(),
// // // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // // //         'messageId': _uuid.v4(),
// // // // // // // // // // // //         'time': now.toIso8601String(),
// // // // // // // // // // // //         'originalTime': now.toIso8601String(),
// // // // // // // // // // // //       };
// // // // // // // // // // // //       _localMessages.add({
// // // // // // // // // // // //         ...message,
// // // // // // // // // // // //         'time': formattedTime,
// // // // // // // // // // // //       });
// // // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)..add(message);
// // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // //           message: text,
// // // // // // // // // // // //           time: formattedTime,
// // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // //         );
// // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // //       }
// // // // // // // // // // // //       _scrollToBottom(attempts: 5);
// // // // // // // // // // // //       _messageController.clear();
// // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Future<void> deleteMessage(String chatId, Map<String, dynamic> message) async {
// // // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // // //     try {
// // // // // // // // // // // //       await _chatRepository.deleteMessage(chatId, message);
// // // // // // // // // // // //       _localMessages.removeWhere((msg) {
// // // // // // // // // // // //         if (message.containsKey('messageId') && msg.containsKey('messageId')) {
// // // // // // // // // // // //           return msg['messageId'] == message['messageId'];
// // // // // // // // // // // //         }
// // // // // // // // // // // //         return msg['text'] == message['text'] &&
// // // // // // // // // // // //             msg['originalTime'] == message['originalTime'] &&
// // // // // // // // // // // //             msg['isMe'] == message['isMe'];
// // // // // // // // // // // //       });
// // // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // // //         final updatedMessages = List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // // //           ..removeWhere((msg) {
// // // // // // // // // // // //             if (message.containsKey('messageId') && msg.containsKey('messageId')) {
// // // // // // // // // // // //               return msg['messageId'] == message['messageId'];
// // // // // // // // // // // //             }
// // // // // // // // // // // //             return msg['text'] == message['text'] &&
// // // // // // // // // // // //                 msg['time'] == message['originalTime'] &&
// // // // // // // // // // // //                 msg['isMe'] == message['isMe'];
// // // // // // // // // // // //           });
// // // // // // // // // // // //         final lastMessage = updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // // //           message: lastMessage,
// // // // // // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // // //         );
// // // // // // // // // // // //         notifyListeners();
// // // // // // // // // // // //       }
// // // // // // // // // // // //     } catch (e) {
// // // // // // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // // // // // //       notifyListeners();
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // // // // // //     _scrollController.dispose();
// // // // // // // // // // // //     _messageController.dispose();
// // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // //   }
// // // // // // // // // // // // }

// // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // import 'dart:io';
// // // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // // //   List<Map<String, dynamic>> _localMessages = [];
// // // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // // //   String? _errorMessage;
// // // // // // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // // // // // //   final Uuid _uuid = const Uuid();
// // // // // // // // // // //   final ScrollController _scrollController = ScrollController();
// // // // // // // // // // //   final TextEditingController _messageController = TextEditingController();
// // // // // // // // // // //   StreamSubscription? _messagesSubscription;

// // // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // // //   String? get errorMessage => _errorMessage;
// // // // // // // // // // //   ScrollController get scrollController => _scrollController;
// // // // // // // // // // //   TextEditingController get messageController => _messageController;

// // // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // // //     _startListeningToChats();
// // // // // // // // // // //   }

// // // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // //     notifyListeners();

// // // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // // //       (chats) {
// // // // // // // // // // //         _chats = chats;
// // // // // // // // // // //         _filteredChats = [];
// // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // //         _errorMessage = null;
// // // // // // // // // // //         notifyListeners();
// // // // // // // // // // //       },
// // // // // // // // // // //       onError: (e) {
// // // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // // //         _isLoading = false;
// // // // // // // // // // //         notifyListeners();
// // // // // // // // // // //       },
// // // // // // // // // // //     );
// // // // // // // // // // //   }

// // // // // // // // // // //   void initChatMessages(ChatModel chat) {
// // // // // // // // // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // // // // //       final time = DateTime.parse(msg['time']);
// // // // // // // // // // //       final formattedTime = _formatTo12Hour(time);
// // // // // // // // // // //       return {
// // // // // // // // // // //         ...msg,
// // // // // // // // // // //         'time': formattedTime,
// // // // // // // // // // //         'originalTime': msg['time'],
// // // // // // // // // // //       };
// // // // // // // // // // //     }));
// // // // // // // // // // //     _listenToMessages(chat.id);
// // // // // // // // // // //     // إزالة notifyListeners() هنا لأن الـ UI هيتعامل مع التحديث بعد الـ build
// // // // // // // // // // //   }

// // // // // // // // // // //   void _listenToMessages(String chatId) {
// // // // // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // // // // //     _messagesSubscription = getChatsStream().listen(
// // // // // // // // // // //       (chats) {
// // // // // // // // // // //         final chat = chats.firstWhere(
// // // // // // // // // // //           (c) => c.id == chatId,
// // // // // // // // // // //           orElse: () => ChatModel(
// // // // // // // // // // //             id: chatId,
// // // // // // // // // // //             name: '',
// // // // // // // // // // //             message: '',
// // // // // // // // // // //             time: '',
// // // // // // // // // // //             unreadCount: 0,
// // // // // // // // // // //             avatar: '',
// // // // // // // // // // //             hasCheckmark: false,
// // // // // // // // // // //             email: '',
// // // // // // // // // // //             messages: [],
// // // // // // // // // // //           ),
// // // // // // // // // // //         );
// // // // // // // // // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // // // // //           final time = DateTime.parse(msg['time']);
// // // // // // // // // // //           final formattedTime = _formatTo12Hour(time);
// // // // // // // // // // //           return {
// // // // // // // // // // //             ...msg,
// // // // // // // // // // //             'time': formattedTime,
// // // // // // // // // // //             'originalTime': msg['time'],
// // // // // // // // // // //           };
// // // // // // // // // // //         }));
// // // // // // // // // // //         notifyListeners();
// // // // // // // // // // //         _scrollToBottom(attempts: 5);
// // // // // // // // // // //       },
// // // // // // // // // // //       onError: (e) {
// // // // // // // // // // //         _errorMessage = 'Failed to load messages: $e';
// // // // // // // // // // //         notifyListeners();
// // // // // // // // // // //       },
// // // // // // // // // // //     );
// // // // // // // // // // //   }

// // // // // // // // // // //   String _formatTo12Hour(DateTime time) {
// // // // // // // // // // //     final hour = time.hour % 12;
// // // // // // // // // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // // // // // // // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // // // // // // // // //     final displayHour = hour == 0 ? 12 : hour;
// // // // // // // // // // //     return '$displayHour:$minute $period';
// // // // // // // // // // //   }

// // // // // // // // // // //   void _scrollToBottom({int attempts = 5}) {
// // // // // // // // // // //     if (attempts <= 0) return;

// // // // // // // // // // //     if (_scrollController.hasClients) {
// // // // // // // // // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // // // // // // // // //       _scrollController.animateTo(
// // // // // // // // // // //         currentExtent,
// // // // // // // // // // //         duration: const Duration(milliseconds: 300),
// // // // // // // // // // //         curve: Curves.easeOut,
// // // // // // // // // // //       );
// // // // // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // // // // //         if (_scrollController.hasClients &&
// // // // // // // // // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // // // // // // // // //           _scrollToBottom(attempts: attempts - 1);
// // // // // // // // // // //         }
// // // // // // // // // // //       });
// // // // // // // // // // //     } else {
// // // // // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // // // // //         _scrollToBottom(attempts: attempts - 1);
// // // // // // // // // // //       });
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // // // // //   }

// // // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // // //       _filteredChats = [];
// // // // // // // // // // //     } else {
// // // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // // //           .where((chat) =>
// // // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // // //           .toList();
// // // // // // // // // // //     }
// // // // // // // // // // //     notifyListeners();
// // // // // // // // // // //   }

// // // // // // // // // // //   Future<void> createChat({
// // // // // // // // // // //     required String name,
// // // // // // // // // // //     required String message,
// // // // // // // // // // //     required String time,
// // // // // // // // // // //     required int unreadCount,
// // // // // // // // // // //     required String avatar,
// // // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // // //     File? image,
// // // // // // // // // // //     required String email,
// // // // // // // // // // //   }) async {
// // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // //     notifyListeners();

// // // // // // // // // // //     try {
// // // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // // //         id: '',
// // // // // // // // // // //         name: name,
// // // // // // // // // // //         message: message,
// // // // // // // // // // //         time: time,
// // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // //         email: email,
// // // // // // // // // // //         messages: [],
// // // // // // // // // // //       );
// // // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // // //         id: docRef.id,
// // // // // // // // // // //         name: name,
// // // // // // // // // // //         message: message,
// // // // // // // // // // //         time: time,
// // // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // // //         avatar: avatar,
// // // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // // //         email: email,
// // // // // // // // // // //         messages: [],
// // // // // // // // // // //       );
// // // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // // //       notifyListeners();
// // // // // // // // // // //     } catch (e) {
// // // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // // //     } finally {
// // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // //       notifyListeners();
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // //     _errorMessage = null;
// // // // // // // // // // //     notifyListeners();

// // // // // // // // // // //     try {
// // // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // // //     } catch (e) {
// // // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // // //     } finally {
// // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // //       notifyListeners();
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // // //     _isLoading = true;
// // // // // // // // // // //     notifyListeners();

// // // // // // // // // // //     try {
// // // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // // //     } catch (e) {
// // // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // // //     } finally {
// // // // // // // // // // //       _isLoading = false;
// // // // // // // // // // //       notifyListeners();
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // // //     if (text.trim().isEmpty) return;

// // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // //     try {
// // // // // // // // // // //       final now = DateTime.now();
// // // // // // // // // // //       final formattedTime = _formatTo12Hour(now);
// // // // // // // // // // //       final message = {
// // // // // // // // // // //         'text': text.trim(),
// // // // // // // // // // //         'isMe': isMe,
// // // // // // // // // // //         'messageId': _uuid.v4(),
// // // // // // // // // // //         'time': now.toIso8601String(),
// // // // // // // // // // //         'originalTime': now.toIso8601String(),
// // // // // // // // // // //       };
// // // // // // // // // // //       _localMessages.add({
// // // // // // // // // // //         ...message,
// // // // // // // // // // //         'time': formattedTime,
// // // // // // // // // // //       });
// // // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // //         final updatedMessages =
// // // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // //               ..add(message);
// // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // //           message: text,
// // // // // // // // // // //           time: formattedTime,
// // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // //         );
// // // // // // // // // // //         notifyListeners();
// // // // // // // // // // //       }
// // // // // // // // // // //       _scrollToBottom(attempts: 5);
// // // // // // // // // // //       _messageController.clear();
// // // // // // // // // // //     } catch (e) {
// // // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // // //       notifyListeners();
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   Future<void> deleteMessage(
// // // // // // // // // // //       String chatId, Map<String, dynamic> message) async {
// // // // // // // // // // //     _errorMessage = null;

// // // // // // // // // // //     try {
// // // // // // // // // // //       await _chatRepository.deleteMessage(chatId, message);
// // // // // // // // // // //       _localMessages.removeWhere((msg) {
// // // // // // // // // // //         if (message.containsKey('messageId') && msg.containsKey('messageId')) {
// // // // // // // // // // //           return msg['messageId'] == message['messageId'];
// // // // // // // // // // //         }
// // // // // // // // // // //         return msg['text'] == message['text'] &&
// // // // // // // // // // //             msg['originalTime'] == message['originalTime'] &&
// // // // // // // // // // //             msg['isMe'] == message['isMe'];
// // // // // // // // // // //       });
// // // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // // //         final updatedMessages =
// // // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // // //               ..removeWhere((msg) {
// // // // // // // // // // //                 if (message.containsKey('messageId') &&
// // // // // // // // // // //                     msg.containsKey('messageId')) {
// // // // // // // // // // //                   return msg['messageId'] == message['messageId'];
// // // // // // // // // // //                 }
// // // // // // // // // // //                 return msg['text'] == message['text'] &&
// // // // // // // // // // //                     msg['time'] == message['originalTime'] &&
// // // // // // // // // // //                     msg['isMe'] == message['isMe'];
// // // // // // // // // // //               });
// // // // // // // // // // //         final lastMessage =
// // // // // // // // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // // //           message: lastMessage,
// // // // // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // // //         );
// // // // // // // // // // //         notifyListeners();
// // // // // // // // // // //       }
// // // // // // // // // // //     } catch (e) {
// // // // // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // // // // //       notifyListeners();
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   @override
// // // // // // // // // // //   void dispose() {
// // // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // // // // //     _scrollController.dispose();
// // // // // // // // // // //     _messageController.dispose();
// // // // // // // // // // //     super.dispose();
// // // // // // // // // // //   }
// // // // // // // // // // // }

// // // // // // // // // // import 'dart:async';
// // // // // // // // // // import 'dart:io';
// // // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // // //   List<Map<String, dynamic>> _localMessages = [];
// // // // // // // // // //   bool _isLoading = false;
// // // // // // // // // //   String? _errorMessage;
// // // // // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // // // // //   final Uuid _uuid = const Uuid();
// // // // // // // // // //   final ScrollController _scrollController = ScrollController();
// // // // // // // // // //   final TextEditingController _messageController = TextEditingController();
// // // // // // // // // //   StreamSubscription? _messagesSubscription;

// // // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // // //   String? get errorMessage => _errorMessage;
// // // // // // // // // //   ScrollController get scrollController => _scrollController;
// // // // // // // // // //   TextEditingController get messageController => _messageController;

// // // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // // //     _startListeningToChats();
// // // // // // // // // //   }

// // // // // // // // // //   void _startListeningToChats() {
// // // // // // // // // //     _isLoading = true;
// // // // // // // // // //     notifyListeners();

// // // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // //       (chats) {
// // // // // // // // // //         _chats = chats;
// // // // // // // // // //         _filteredChats = [];
// // // // // // // // // //         _isLoading = false;
// // // // // // // // // //         _errorMessage = null;
// // // // // // // // // //         notifyListeners();
// // // // // // // // // //       },
// // // // // // // // // //       onError: (e) {
// // // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // // //         _isLoading = false;
// // // // // // // // // //         notifyListeners();
// // // // // // // // // //       },
// // // // // // // // // //     );
// // // // // // // // // //   }

// // // // // // // // // //   void initChatMessages(ChatModel chat) {
// // // // // // // // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // // // //       final time = DateTime.parse(msg['time']);
// // // // // // // // // //       final formattedTime = _formatTo12Hour(time);
// // // // // // // // // //       return {
// // // // // // // // // //         ...msg,
// // // // // // // // // //         'time': formattedTime,
// // // // // // // // // //         'originalTime': msg['time'],
// // // // // // // // // //       };
// // // // // // // // // //     }));
// // // // // // // // // //     _listenToMessages(chat.id);
// // // // // // // // // //   }

// // // // // // // // // //   void _listenToMessages(String chatId) {
// // // // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // // // //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // // //       (chats) {
// // // // // // // // // //         final chat = chats.firstWhere(
// // // // // // // // // //           (c) => c.id == chatId,
// // // // // // // // // //           orElse: () => ChatModel(
// // // // // // // // // //             id: chatId,
// // // // // // // // // //             name: '',
// // // // // // // // // //             message: '',
// // // // // // // // // //             time: '',
// // // // // // // // // //             unreadCount: 0,
// // // // // // // // // //             avatar: '',
// // // // // // // // // //             hasCheckmark: false,
// // // // // // // // // //             email: '',
// // // // // // // // // //             messages: [],
// // // // // // // // // //           ),
// // // // // // // // // //         );
// // // // // // // // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // // // //           final time = DateTime.parse(msg['time']);
// // // // // // // // // //           final formattedTime = _formatTo12Hour(time);
// // // // // // // // // //           return {
// // // // // // // // // //             ...msg,
// // // // // // // // // //             'time': formattedTime,
// // // // // // // // // //             'originalTime': msg['time'],
// // // // // // // // // //           };
// // // // // // // // // //         }));
// // // // // // // // // //         notifyListeners();
// // // // // // // // // //         _scrollToBottom(attempts: 5);
// // // // // // // // // //       },
// // // // // // // // // //       onError: (e) {
// // // // // // // // // //         _errorMessage = 'Failed to load messages: $e';
// // // // // // // // // //         notifyListeners();
// // // // // // // // // //       },
// // // // // // // // // //     );
// // // // // // // // // //   }

// // // // // // // // // //   String _formatTo12Hour(DateTime time) {
// // // // // // // // // //     final hour = time.hour % 12;
// // // // // // // // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // // // // // // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // // // // // // // //     final displayHour = hour == 0 ? 12 : hour;
// // // // // // // // // //     return '$displayHour:$minute $period';
// // // // // // // // // //   }

// // // // // // // // // //   void _scrollToBottom({int attempts = 5}) {
// // // // // // // // // //     if (attempts <= 0) return;

// // // // // // // // // //     if (_scrollController.hasClients) {
// // // // // // // // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // // // // // // // //       _scrollController.animateTo(
// // // // // // // // // //         currentExtent,
// // // // // // // // // //         duration: const Duration(milliseconds: 300),
// // // // // // // // // //         curve: Curves.easeOut,
// // // // // // // // // //       );
// // // // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // // // //         if (_scrollController.hasClients &&
// // // // // // // // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // // // // // // // //           _scrollToBottom(attempts: attempts - 1);
// // // // // // // // // //         }
// // // // // // // // // //       });
// // // // // // // // // //     } else {
// // // // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // // // //         _scrollToBottom(attempts: attempts - 1);
// // // // // // // // // //       });
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // // // //   }

// // // // // // // // // //   void filterChats(String query) {
// // // // // // // // // //     if (query.isEmpty) {
// // // // // // // // // //       _filteredChats = [];
// // // // // // // // // //     } else {
// // // // // // // // // //       _filteredChats = _chats
// // // // // // // // // //           .where((chat) =>
// // // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // // //           .toList();
// // // // // // // // // //     }
// // // // // // // // // //     notifyListeners();
// // // // // // // // // //   }

// // // // // // // // // //   Future<void> createChat({
// // // // // // // // // //     required String name,
// // // // // // // // // //     required String message,
// // // // // // // // // //     required String time,
// // // // // // // // // //     required int unreadCount,
// // // // // // // // // //     required String avatar,
// // // // // // // // // //     required bool hasCheckmark,
// // // // // // // // // //     File? image,
// // // // // // // // // //     required String email,
// // // // // // // // // //   }) async {
// // // // // // // // // //     _isLoading = true;
// // // // // // // // // //     _errorMessage = null;
// // // // // // // // // //     notifyListeners();

// // // // // // // // // //     try {
// // // // // // // // // //       final newChat = ChatModel(
// // // // // // // // // //         id: '',
// // // // // // // // // //         name: name,
// // // // // // // // // //         message: message,
// // // // // // // // // //         time: time,
// // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // //         avatar: avatar,
// // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // //         email: email,
// // // // // // // // // //         messages: [],
// // // // // // // // // //       );
// // // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // // //         id: docRef.id,
// // // // // // // // // //         name: name,
// // // // // // // // // //         message: message,
// // // // // // // // // //         time: time,
// // // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // // //         avatar: avatar,
// // // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // // //         email: email,
// // // // // // // // // //         messages: [],
// // // // // // // // // //       );
// // // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // // //       notifyListeners();
// // // // // // // // // //     } catch (e) {
// // // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // // //     } finally {
// // // // // // // // // //       _isLoading = false;
// // // // // // // // // //       notifyListeners();
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // // //     _isLoading = true;
// // // // // // // // // //     _errorMessage = null;
// // // // // // // // // //     notifyListeners();

// // // // // // // // // //     try {
// // // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // // //     } catch (e) {
// // // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // // //     } finally {
// // // // // // // // // //       _isLoading = false;
// // // // // // // // // //       notifyListeners();
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // // //     _isLoading = true;
// // // // // // // // // //     notifyListeners();

// // // // // // // // // //     try {
// // // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // // //     } catch (e) {
// // // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // // //     } finally {
// // // // // // // // // //       _isLoading = false;
// // // // // // // // // //       notifyListeners();
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // // //     if (text.trim().isEmpty) return;

// // // // // // // // // //     _errorMessage = null;

// // // // // // // // // //     try {
// // // // // // // // // //       final now = DateTime.now();
// // // // // // // // // //       final formattedTime = _formatTo12Hour(now);
// // // // // // // // // //       final message = {
// // // // // // // // // //         'text': text.trim(),
// // // // // // // // // //         'isMe': isMe,
// // // // // // // // // //         'messageId': _uuid.v4(),
// // // // // // // // // //         'time': now.toIso8601String(),
// // // // // // // // // //         'originalTime': now.toIso8601String(),
// // // // // // // // // //       };
// // // // // // // // // //       _localMessages.add({
// // // // // // // // // //         ...message,
// // // // // // // // // //         'time': formattedTime,
// // // // // // // // // //       });
// // // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // //         final updatedMessages =
// // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // //               ..add(message);
// // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // //           message: text,
// // // // // // // // // //           time: formattedTime,
// // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // //         );
// // // // // // // // // //         notifyListeners();
// // // // // // // // // //       }
// // // // // // // // // //       _scrollToBottom(attempts: 5);
// // // // // // // // // //       _messageController.clear();
// // // // // // // // // //     } catch (e) {
// // // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // // //       notifyListeners();
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   Future<bool> deleteMessage(
// // // // // // // // // //       String chatId, Map<String, dynamic> message) async {
// // // // // // // // // //     _errorMessage = null;

// // // // // // // // // //     try {
// // // // // // // // // //       // Call the repository to delete the message
// // // // // // // // // //       await _chatRepository.deleteMessage(chatId, message);

// // // // // // // // // //       // Remove the message locally from _localMessages
// // // // // // // // // //       _localMessages.removeWhere((msg) {
// // // // // // // // // //         if (message.containsKey('messageId') && msg.containsKey('messageId')) {
// // // // // // // // // //           return msg['messageId'] == message['messageId'];
// // // // // // // // // //         }
// // // // // // // // // //         return msg['text'] == message['text'] &&
// // // // // // // // // //             msg['originalTime'] == message['originalTime'] &&
// // // // // // // // // //             msg['isMe'] == message['isMe'];
// // // // // // // // // //       });

// // // // // // // // // //       // Update the chat in _chats
// // // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // // //         final updatedMessages =
// // // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // // //               ..removeWhere((msg) {
// // // // // // // // // //                 if (message.containsKey('messageId') &&
// // // // // // // // // //                     msg.containsKey('messageId')) {
// // // // // // // // // //                   return msg['messageId'] == message['messageId'];
// // // // // // // // // //                 }
// // // // // // // // // //                 return msg['text'] == message['text'] &&
// // // // // // // // // //                     msg['time'] == message['originalTime'] &&
// // // // // // // // // //                     msg['isMe'] == message['isMe'];
// // // // // // // // // //               });
// // // // // // // // // //         final lastMessage =
// // // // // // // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // // //           message: lastMessage,
// // // // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // // //           messages: updatedMessages,
// // // // // // // // // //         );
// // // // // // // // // //         notifyListeners();
// // // // // // // // // //       }

// // // // // // // // // //       // Refresh the stream data (without await)
// // // // // // // // // //       _listenToMessages(chatId);
// // // // // // // // // //       return true;
// // // // // // // // // //     } catch (e) {
// // // // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // // // //       notifyListeners();
// // // // // // // // // //       return false;
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   @override
// // // // // // // // // //   void dispose() {
// // // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // // // //     _scrollController.dispose();
// // // // // // // // // //     _messageController.dispose();
// // // // // // // // // //     super.dispose();
// // // // // // // // // //   }
// // // // // // // // // // }

// // // // // // // // // import 'dart:async';
// // // // // // // // // import 'dart:io';
// // // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // // //   List<Map<String, dynamic>> _localMessages = [];
// // // // // // // // //   bool _isLoading = false;
// // // // // // // // //   String? _errorMessage;
// // // // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // // // //   final Uuid _uuid = const Uuid();
// // // // // // // // //   final ScrollController _scrollController = ScrollController();
// // // // // // // // //   final TextEditingController _messageController = TextEditingController();
// // // // // // // // //   StreamSubscription? _messagesSubscription;

// // // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // // //   String? get errorMessage => _errorMessage;
// // // // // // // // //   ScrollController get scrollController => _scrollController;
// // // // // // // // //   TextEditingController get messageController => _messageController;

// // // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // // //     _startListeningToChats();
// // // // // // // // //   }

// // // // // // // // //   void _startListeningToChats() {
// // // // // // // // //     _isLoading = true;
// // // // // // // // //     notifyListeners();

// // // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // //       (chats) {
// // // // // // // // //         _chats = chats;
// // // // // // // // //         _filteredChats = [];
// // // // // // // // //         _isLoading = false;
// // // // // // // // //         _errorMessage = null;
// // // // // // // // //         notifyListeners();
// // // // // // // // //       },
// // // // // // // // //       onError: (e) {
// // // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // // //         _isLoading = false;
// // // // // // // // //         notifyListeners();
// // // // // // // // //       },
// // // // // // // // //     );
// // // // // // // // //   }

// // // // // // // // //   void initChatMessages(ChatModel chat) {
// // // // // // // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // // //       final time = DateTime.parse(msg['time']);
// // // // // // // // //       final formattedTime = _formatTo12Hour(time);
// // // // // // // // //       return {
// // // // // // // // //         ...msg,
// // // // // // // // //         'time': formattedTime,
// // // // // // // // //         'originalTime': msg['time'],
// // // // // // // // //       };
// // // // // // // // //     }));
// // // // // // // // //     _listenToMessages(chat.id);
// // // // // // // // //   }

// // // // // // // // //   void _listenToMessages(String chatId) {
// // // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // // //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // // //       (chats) {
// // // // // // // // //         final chat = chats.firstWhere(
// // // // // // // // //           (c) => c.id == chatId,
// // // // // // // // //           orElse: () => ChatModel(
// // // // // // // // //             id: chatId,
// // // // // // // // //             name: '',
// // // // // // // // //             message: '',
// // // // // // // // //             time: '',
// // // // // // // // //             unreadCount: 0,
// // // // // // // // //             avatar: '',
// // // // // // // // //             hasCheckmark: false,
// // // // // // // // //             email: '',
// // // // // // // // //             messages: [],
// // // // // // // // //           ),
// // // // // // // // //         );
// // // // // // // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // // //           final time = DateTime.parse(msg['time']);
// // // // // // // // //           final formattedTime = _formatTo12Hour(time);
// // // // // // // // //           return {
// // // // // // // // //             ...msg,
// // // // // // // // //             'time': formattedTime,
// // // // // // // // //             'originalTime': msg['time'],
// // // // // // // // //           };
// // // // // // // // //         }));
// // // // // // // // //         notifyListeners();
// // // // // // // // //         _scrollToBottom(attempts: 5);
// // // // // // // // //       },
// // // // // // // // //       onError: (e) {
// // // // // // // // //         _errorMessage = 'Failed to load messages: $e';
// // // // // // // // //         notifyListeners();
// // // // // // // // //       },
// // // // // // // // //     );
// // // // // // // // //   }

// // // // // // // // //   String _formatTo12Hour(DateTime time) {
// // // // // // // // //     final hour = time.hour % 12;
// // // // // // // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // // // // // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // // // // // // //     final displayHour = hour == 0 ? 12 : hour;
// // // // // // // // //     return '$displayHour:$minute $period';
// // // // // // // // //   }

// // // // // // // // //   void _scrollToBottom({int attempts = 5}) {
// // // // // // // // //     if (attempts <= 0) return;

// // // // // // // // //     if (_scrollController.hasClients) {
// // // // // // // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // // // // // // //       _scrollController.animateTo(
// // // // // // // // //         currentExtent,
// // // // // // // // //         duration: const Duration(milliseconds: 300),
// // // // // // // // //         curve: Curves.easeOut,
// // // // // // // // //       );
// // // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // // //         if (_scrollController.hasClients &&
// // // // // // // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // // // // // // //           _scrollToBottom(attempts: attempts - 1);
// // // // // // // // //         }
// // // // // // // // //       });
// // // // // // // // //     } else {
// // // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // // //         _scrollToBottom(attempts: attempts - 1);
// // // // // // // // //       });
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // // //   }

// // // // // // // // //   void filterChats(String query) {
// // // // // // // // //     if (query.isEmpty) {
// // // // // // // // //       _filteredChats = [];
// // // // // // // // //     } else {
// // // // // // // // //       _filteredChats = _chats
// // // // // // // // //           .where((chat) =>
// // // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // // //           .toList();
// // // // // // // // //     }
// // // // // // // // //     notifyListeners();
// // // // // // // // //   }

// // // // // // // // //   Future<void> createChat({
// // // // // // // // //     required String name,
// // // // // // // // //     required String message,
// // // // // // // // //     required String time,
// // // // // // // // //     required int unreadCount,
// // // // // // // // //     required String avatar,
// // // // // // // // //     required bool hasCheckmark,
// // // // // // // // //     File? image,
// // // // // // // // //     required String email,
// // // // // // // // //   }) async {
// // // // // // // // //     _isLoading = true;
// // // // // // // // //     _errorMessage = null;
// // // // // // // // //     notifyListeners();

// // // // // // // // //     try {
// // // // // // // // //       final newChat = ChatModel(
// // // // // // // // //         id: '',
// // // // // // // // //         name: name,
// // // // // // // // //         message: message,
// // // // // // // // //         time: time,
// // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // //         avatar: avatar,
// // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // //         email: email,
// // // // // // // // //         messages: [],
// // // // // // // // //       );
// // // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // // //       final updatedChat = ChatModel(
// // // // // // // // //         id: docRef.id,
// // // // // // // // //         name: name,
// // // // // // // // //         message: message,
// // // // // // // // //         time: time,
// // // // // // // // //         unreadCount: unreadCount,
// // // // // // // // //         avatar: avatar,
// // // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // // //         email: email,
// // // // // // // // //         messages: [],
// // // // // // // // //       );
// // // // // // // // //       _chats.add(updatedChat);
// // // // // // // // //       notifyListeners();
// // // // // // // // //     } catch (e) {
// // // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // // //     } finally {
// // // // // // // // //       _isLoading = false;
// // // // // // // // //       notifyListeners();
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // // //     _isLoading = true;
// // // // // // // // //     _errorMessage = null;
// // // // // // // // //     notifyListeners();

// // // // // // // // //     try {
// // // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // // //     } catch (e) {
// // // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // // //     } finally {
// // // // // // // // //       _isLoading = false;
// // // // // // // // //       notifyListeners();
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // // //     _isLoading = true;
// // // // // // // // //     notifyListeners();

// // // // // // // // //     try {
// // // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // // //     } catch (e) {
// // // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // // //     } finally {
// // // // // // // // //       _isLoading = false;
// // // // // // // // //       notifyListeners();
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // // //     if (text.trim().isEmpty) return;

// // // // // // // // //     _errorMessage = null;

// // // // // // // // //     try {
// // // // // // // // //       final now = DateTime.now();
// // // // // // // // //       final formattedTime = _formatTo12Hour(now);
// // // // // // // // //       final message = {
// // // // // // // // //         'text': text.trim(),
// // // // // // // // //         'isMe': isMe,
// // // // // // // // //         'messageId': _uuid.v4(),
// // // // // // // // //         'time': now.toIso8601String(),
// // // // // // // // //         'originalTime': now.toIso8601String(),
// // // // // // // // //       };
// // // // // // // // //       _localMessages.add({
// // // // // // // // //         ...message,
// // // // // // // // //         'time': formattedTime,
// // // // // // // // //       });
// // // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // //         final updatedMessages =
// // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // //               ..add(message);
// // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // //           message: text,
// // // // // // // // //           time: formattedTime,
// // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // //           messages: updatedMessages,
// // // // // // // // //         );
// // // // // // // // //         notifyListeners();
// // // // // // // // //       }
// // // // // // // // //       _scrollToBottom(attempts: 5);
// // // // // // // // //       _messageController.clear();
// // // // // // // // //     } catch (e) {
// // // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // // //       notifyListeners();
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   Future<bool> deleteMessage(
// // // // // // // // //       String chatId, Map<String, dynamic> message) async {
// // // // // // // // //     _errorMessage = null;

// // // // // // // // //     try {
// // // // // // // // //       // تنظيف الرسالة لتتطابق مع Firestore
// // // // // // // // //       final messageToDelete = {
// // // // // // // // //         'text': message['text'],
// // // // // // // // //         'isMe': message['isMe'],
// // // // // // // // //         'messageId': message['messageId'],
// // // // // // // // //         'time': message['time'], // استخدام الوقت الأصلي (ISO 8601)
// // // // // // // // //       };

// // // // // // // // //       // استدعاء الـ repository لمسح الرسالة
// // // // // // // // //       await _chatRepository.deleteMessage(chatId, messageToDelete);

// // // // // // // // //       // إزالة الرسالة محليًا من _localMessages
// // // // // // // // //       _localMessages.removeWhere((msg) {
// // // // // // // // //         return msg['messageId'] == message['messageId'];
// // // // // // // // //       });

// // // // // // // // //       // تحديث الـ chats
// // // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // // //       if (chatIndex != -1) {
// // // // // // // // //         final updatedMessages =
// // // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // // //               ..removeWhere((msg) {
// // // // // // // // //                 return msg['messageId'] == message['messageId'];
// // // // // // // // //               });
// // // // // // // // //         final lastMessage =
// // // // // // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // // //           message: lastMessage,
// // // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // // //           messages: updatedMessages,
// // // // // // // // //         );
// // // // // // // // //         notifyListeners();
// // // // // // // // //       }

// // // // // // // // //       // تحديث الـ Stream
// // // // // // // // //       _listenToMessages(chatId);
// // // // // // // // //       return true;
// // // // // // // // //     } catch (e) {
// // // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // // //       notifyListeners();
// // // // // // // // //       return false;
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   @override
// // // // // // // // //   void dispose() {
// // // // // // // // //     _chatSubscription.cancel();
// // // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // // //     _scrollController.dispose();
// // // // // // // // //     _messageController.dispose();
// // // // // // // // //     super.dispose();
// // // // // // // // //   }
// // // // // // // // // }

// // // // // // // // import 'dart:async';
// // // // // // // // import 'dart:io';
// // // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // // //   final ChatRepository _chatRepository;
// // // // // // // //   List<ChatModel> _chats = [];
// // // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // // //   List<Map<String, dynamic>> _localMessages = [];
// // // // // // // //   bool _isLoading = false;
// // // // // // // //   String? _errorMessage;
// // // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // // //   final Uuid _uuid = const Uuid();
// // // // // // // //   final ScrollController _scrollController = ScrollController();
// // // // // // // //   final TextEditingController _messageController = TextEditingController();
// // // // // // // //   StreamSubscription? _messagesSubscription;

// // // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // // // // // //   bool get isLoading => _isLoading;
// // // // // // // //   String? get errorMessage => _errorMessage;
// // // // // // // //   ScrollController get scrollController => _scrollController;
// // // // // // // //   TextEditingController get messageController => _messageController;

// // // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // // //     _startListeningToChats();
// // // // // // // //   }

// // // // // // // //   void _startListeningToChats() {
// // // // // // // //     _isLoading = true;
// // // // // // // //     notifyListeners();

// // // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // //       (chats) {
// // // // // // // //         _chats = chats;
// // // // // // // //         _filteredChats = [];
// // // // // // // //         _isLoading = false;
// // // // // // // //         _errorMessage = null;
// // // // // // // //         notifyListeners();
// // // // // // // //       },
// // // // // // // //       onError: (e) {
// // // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // // //         _isLoading = false;
// // // // // // // //         notifyListeners();
// // // // // // // //       },
// // // // // // // //     );
// // // // // // // //   }

// // // // // // // //   void initChatMessages(ChatModel chat) {
// // // // // // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // //       final time = DateTime.parse(msg['time']);
// // // // // // // //       final formattedTime = _formatTo12Hour(time);
// // // // // // // //       return {
// // // // // // // //         ...msg,
// // // // // // // //         'time': formattedTime,
// // // // // // // //         'originalTime': msg['time'],
// // // // // // // //       };
// // // // // // // //     }));
// // // // // // // //     _listenToMessages(chat.id);
// // // // // // // //   }

// // // // // // // //   void _listenToMessages(String chatId) {
// // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// // // // // // // //       (chats) {
// // // // // // // //         final chat = chats.firstWhere(
// // // // // // // //           (c) => c.id == chatId,
// // // // // // // //           orElse: () => ChatModel(
// // // // // // // //             id: chatId,
// // // // // // // //             name: '',
// // // // // // // //             message: '',
// // // // // // // //             time: '',
// // // // // // // //             unreadCount: 0,
// // // // // // // //             avatar: '',
// // // // // // // //             hasCheckmark: false,
// // // // // // // //             email: '',
// // // // // // // //             messages: [],
// // // // // // // //           ),
// // // // // // // //         );
// // // // // // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // // // // // //           final time = DateTime.parse(msg['time']);
// // // // // // // //           final formattedTime = _formatTo12Hour(time);
// // // // // // // //           return {
// // // // // // // //             ...msg,
// // // // // // // //             'time': formattedTime,
// // // // // // // //             'originalTime': msg['time'],
// // // // // // // //           };
// // // // // // // //         }));
// // // // // // // //         notifyListeners();
// // // // // // // //         _scrollToBottom(attempts: 5);
// // // // // // // //       },
// // // // // // // //       onError: (e) {
// // // // // // // //         _errorMessage = 'Failed to load messages: $e';
// // // // // // // //         notifyListeners();
// // // // // // // //       },
// // // // // // // //     );
// // // // // // // //   }

// // // // // // // //   String _formatTo12Hour(DateTime time) {
// // // // // // // //     final hour = time.hour % 12;
// // // // // // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // // // // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // // // // // //     final displayHour = hour == 0 ? 12 : hour;
// // // // // // // //     return '$displayHour:$minute $period';
// // // // // // // //   }

// // // // // // // //   void _scrollToBottom({int attempts = 5}) {
// // // // // // // //     if (attempts <= 0) return;

// // // // // // // //     if (_scrollController.hasClients) {
// // // // // // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // // // // // //       _scrollController.animateTo(
// // // // // // // //         currentExtent,
// // // // // // // //         duration: const Duration(milliseconds: 300),
// // // // // // // //         curve: Curves.easeOut,
// // // // // // // //       );
// // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // //         if (_scrollController.hasClients &&
// // // // // // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // // // // // //           _scrollToBottom(attempts: attempts - 1);
// // // // // // // //         }
// // // // // // // //       });
// // // // // // // //     } else {
// // // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // // //         _scrollToBottom(attempts: attempts - 1);
// // // // // // // //       });
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // // //     return _chatRepository.getChatsStream();
// // // // // // // //   }

// // // // // // // //   void filterChats(String query) {
// // // // // // // //     if (query.isEmpty) {
// // // // // // // //       _filteredChats = [];
// // // // // // // //     } else {
// // // // // // // //       _filteredChats = _chats
// // // // // // // //           .where((chat) =>
// // // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // // //           .toList();
// // // // // // // //     }
// // // // // // // //     notifyListeners();
// // // // // // // //   }

// // // // // // // //   Future<void> createChat({
// // // // // // // //     required String name,
// // // // // // // //     required String message,
// // // // // // // //     required String time,
// // // // // // // //     required int unreadCount,
// // // // // // // //     required String avatar,
// // // // // // // //     required bool hasCheckmark,
// // // // // // // //     File? image,
// // // // // // // //     required String email,
// // // // // // // //   }) async {
// // // // // // // //     _isLoading = true;
// // // // // // // //     _errorMessage = null;
// // // // // // // //     notifyListeners();

// // // // // // // //     try {
// // // // // // // //       final newChat = ChatModel(
// // // // // // // //         id: '',
// // // // // // // //         name: name,
// // // // // // // //         message: message,
// // // // // // // //         time: time,
// // // // // // // //         unreadCount: unreadCount,
// // // // // // // //         avatar: avatar,
// // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // //         email: email,
// // // // // // // //         messages: [],
// // // // // // // //       );
// // // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // // //       final updatedChat = ChatModel(
// // // // // // // //         id: docRef.id,
// // // // // // // //         name: name,
// // // // // // // //         message: message,
// // // // // // // //         time: time,
// // // // // // // //         unreadCount: unreadCount,
// // // // // // // //         avatar: avatar,
// // // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // // //         email: email,
// // // // // // // //         messages: [],
// // // // // // // //       );
// // // // // // // //       _chats.add(updatedChat);
// // // // // // // //       notifyListeners();
// // // // // // // //     } catch (e) {
// // // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // // //     } finally {
// // // // // // // //       _isLoading = false;
// // // // // // // //       notifyListeners();
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // // //     _isLoading = true;
// // // // // // // //     _errorMessage = null;
// // // // // // // //     notifyListeners();

// // // // // // // //     try {
// // // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // // //     } catch (e) {
// // // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // // //     } finally {
// // // // // // // //       _isLoading = false;
// // // // // // // //       notifyListeners();
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // // //     _isLoading = true;
// // // // // // // //     notifyListeners();

// // // // // // // //     try {
// // // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // // //     } catch (e) {
// // // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // // //     } finally {
// // // // // // // //       _isLoading = false;
// // // // // // // //       notifyListeners();
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // // //     if (text.trim().isEmpty) return;

// // // // // // // //     _errorMessage = null;

// // // // // // // //     try {
// // // // // // // //       final now = DateTime.now();
// // // // // // // //       final formattedTime = _formatTo12Hour(now);
// // // // // // // //       final message = {
// // // // // // // //         'text': text.trim(),
// // // // // // // //         'isMe': isMe,
// // // // // // // //         'messageId': _uuid.v4(),
// // // // // // // //         'time': now.toIso8601String(),
// // // // // // // //       };
// // // // // // // //       _localMessages.add({
// // // // // // // //         ...message,
// // // // // // // //         'time': formattedTime,
// // // // // // // //         'originalTime': message['time'],
// // // // // // // //       });
// // // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // //       if (chatIndex != -1) {
// // // // // // // //         final updatedMessages =
// // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // //               ..add(message);
// // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // //           message: text,
// // // // // // // //           time: formattedTime,
// // // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // //           messages: updatedMessages,
// // // // // // // //         );
// // // // // // // //         notifyListeners();
// // // // // // // //       }
// // // // // // // //       _scrollToBottom(attempts: 5);
// // // // // // // //       _messageController.clear();
// // // // // // // //     } catch (e) {
// // // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // // //       notifyListeners();
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   Future<bool> deleteMessage(
// // // // // // // //       String chatId, Map<String, dynamic> message) async {
// // // // // // // //     _errorMessage = null;

// // // // // // // //     try {
// // // // // // // //       // تنظيف الرسالة لتتطابق مع Firestore
// // // // // // // //       final messageToDelete = {
// // // // // // // //         'text': message['text'],
// // // // // // // //         'isMe': message['isMe'],
// // // // // // // //         'messageId': message['messageId'],
// // // // // // // //         'time': message.containsKey('originalTime')
// // // // // // // //             ? message['originalTime']
// // // // // // // //             : message['time'], // استخدام originalTime للتطابق مع Firestore
// // // // // // // //       };

// // // // // // // //       // استدعاء الـ repository لمسح الرسالة
// // // // // // // //       await _chatRepository.deleteMessage(chatId, messageToDelete);

// // // // // // // //       // إزالة الرسالة محليًا من _localMessages
// // // // // // // //       _localMessages.removeWhere((msg) {
// // // // // // // //         return msg['messageId'] == message['messageId'];
// // // // // // // //       });

// // // // // // // //       // تحديث الـ chats
// // // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // // //       if (chatIndex != -1) {
// // // // // // // //         final updatedMessages =
// // // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // // //               ..removeWhere((msg) {
// // // // // // // //                 return msg['messageId'] == message['messageId'];
// // // // // // // //               });
// // // // // // // //         final lastMessage =
// // // // // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // // //           id: _chats[chatIndex].id,
// // // // // // // //           name: _chats[chatIndex].name,
// // // // // // // //           message: lastMessage,
// // // // // // // //           time: _chats[chatIndex].time,
// // // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // // //           email: _chats[chatIndex].email,
// // // // // // // //           messages: updatedMessages,
// // // // // // // //         );
// // // // // // // //         notifyListeners();
// // // // // // // //       }

// // // // // // // //       // تحديث الـ Stream
// // // // // // // //       _listenToMessages(chatId);
// // // // // // // //       return true;
// // // // // // // //     } catch (e) {
// // // // // // // //       print('Error deleting message: $e'); // للتصحيح
// // // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // // //       notifyListeners();
// // // // // // // //       return false;
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   @override
// // // // // // // //   void dispose() {
// // // // // // // //     _chatSubscription.cancel();
// // // // // // // //     _messagesSubscription?.cancel();
// // // // // // // //     _scrollController.dispose();
// // // // // // // //     _messageController.dispose();
// // // // // // // //     super.dispose();
// // // // // // // //   }
// // // // // // // // }

// // // // // // // import 'dart:async';
// // // // // // // import 'dart:io';
// // // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // // import 'package:flutter/material.dart';
// // // // // // // import 'package:uuid/uuid.dart';

// // // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // // //   final ChatRepository _chatRepository;
// // // // // // //   List<ChatModel> _chats = [];
// // // // // // //   List<ChatModel> _filteredChats = [];
// // // // // // //   List<Map<String, dynamic>> _localMessages = [];
// // // // // // //   bool _isLoading = false;
// // // // // // //   String? _errorMessage;
// // // // // // //   late StreamSubscription _chatSubscription;
// // // // // // //   final Uuid _uuid = const Uuid();
// // // // // // //   final ScrollController _scrollController = ScrollController();
// // // // // // //   final TextEditingController _messageController = TextEditingController();
// // // // // // //   StreamSubscription? _messagesSubscription;

// // // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // // // // //   bool get isLoading => _isLoading;
// // // // // // //   String? get errorMessage => _errorMessage;
// // // // // // //   ScrollController get scrollController => _scrollController;
// // // // // // //   TextEditingController get messageController => _messageController;

// // // // // // //   ChatViewModel(this._chatRepository) {
// // // // // // //     _startListeningToChats();
// // // // // // //   }

// // // // // // //   void _startListeningToChats() {
// // // // // // //     _isLoading = true;
// // // // // // //     notifyListeners();

// // // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // // //       (chats) {
// // // // // // //         _chats = chats;
// // // // // // //         _filteredChats = [];
// // // // // // //         _isLoading = false;
// // // // // // //         _errorMessage = null;
// // // // // // //         notifyListeners();
// // // // // // //       },
// // // // // // //       onError: (e) {
// // // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // // //         _isLoading = false;
// // // // // // //         notifyListeners();
// // // // // // //       },
// // // // // // //     );
// // // // // // //   }

// // // // // // //   void initChatMessages(ChatModel chat) {
// // // // // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // // // // //       final time = DateTime.parse(msg['time']);
// // // // // // //       final formattedTime = _formatTo12Hour(time);
// // // // // // //       return {
// // // // // // //         ...msg,
// // // // // // //         'time': formattedTime,
// // // // // // //         'originalTime': msg['time'],
// // // // // // //       };
// // // // // // //     }));
// // // // // // //     _listenToMessages(chat.id);
// // // // // // //   }

// // // // // // //   void _listenToMessages(String chatId) {
// // // // // // //     _messagesSubscription?.cancel();
// // // // // // //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// // // // // // //       (chats) {
// // // // // // //         final chat = chats.firstWhere(
// // // // // // //           (c) => c.id == chatId,
// // // // // // //           orElse: () => ChatModel(
// // // // // // //             id: chatId,
// // // // // // //             name: '',
// // // // // // //             message: '',
// // // // // // //             time: '',
// // // // // // //             unreadCount: 0,
// // // // // // //             avatar: '',
// // // // // // //             hasCheckmark: false,
// // // // // // //             email: '',
// // // // // // //             messages: [],
// // // // // // //           ),
// // // // // // //         );
// // // // // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // // // // //           final time = DateTime.parse(msg['time']);
// // // // // // //           final formattedTime = _formatTo12Hour(time);
// // // // // // //           return {
// // // // // // //             ...msg,
// // // // // // //             'time': formattedTime,
// // // // // // //             'originalTime': msg['time'],
// // // // // // //           };
// // // // // // //         }));
// // // // // // //         notifyListeners();
// // // // // // //         _scrollToBottom(attempts: 5);
// // // // // // //       },
// // // // // // //       onError: (e) {
// // // // // // //         _errorMessage = 'Failed to load messages: $e';
// // // // // // //         notifyListeners();
// // // // // // //       },
// // // // // // //     );
// // // // // // //   }

// // // // // // //   String _formatTo12Hour(DateTime time) {
// // // // // // //     final hour = time.hour % 12;
// // // // // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // // // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // // // // //     final displayHour = hour == 0 ? 12 : hour;
// // // // // // //     return '$displayHour:$minute $period';
// // // // // // //   }

// // // // // // //   void _scrollToBottom({int attempts = 5}) {
// // // // // // //     if (attempts <= 0) return;

// // // // // // //     if (_scrollController.hasClients) {
// // // // // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // // // // //       _scrollController.animateTo(
// // // // // // //         currentExtent,
// // // // // // //         duration: const Duration(milliseconds: 300),
// // // // // // //         curve: Curves.easeOut,
// // // // // // //       );
// // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // //         if (_scrollController.hasClients &&
// // // // // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // // // // //           _scrollToBottom(attempts: attempts - 1);
// // // // // // //         }
// // // // // // //       });
// // // // // // //     } else {
// // // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // // //         _scrollToBottom(attempts: attempts - 1);
// // // // // // //       });
// // // // // // //     }
// // // // // // //   }

// // // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // // //     return _chatRepository.getChatsStream();
// // // // // // //   }

// // // // // // //   void filterChats(String query) {
// // // // // // //     if (query.isEmpty) {
// // // // // // //       _filteredChats = [];
// // // // // // //     } else {
// // // // // // //       _filteredChats = _chats
// // // // // // //           .where((chat) =>
// // // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // // //           .toList();
// // // // // // //     }
// // // // // // //     notifyListeners();
// // // // // // //   }

// // // // // // //   Future<void> createChat({
// // // // // // //     required String name,
// // // // // // //     required String message,
// // // // // // //     required String time,
// // // // // // //     required int unreadCount,
// // // // // // //     required String avatar,
// // // // // // //     required bool hasCheckmark,
// // // // // // //     File? image,
// // // // // // //     required String email,
// // // // // // //   }) async {
// // // // // // //     _isLoading = true;
// // // // // // //     _errorMessage = null;
// // // // // // //     notifyListeners();

// // // // // // //     try {
// // // // // // //       final newChat = ChatModel(
// // // // // // //         id: '',
// // // // // // //         name: name,
// // // // // // //         message: message,
// // // // // // //         time: time,
// // // // // // //         unreadCount: unreadCount,
// // // // // // //         avatar: avatar,
// // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // //         email: email,
// // // // // // //         messages: [],
// // // // // // //       );
// // // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // // //       final updatedChat = ChatModel(
// // // // // // //         id: docRef.id,
// // // // // // //         name: name,
// // // // // // //         message: message,
// // // // // // //         time: time,
// // // // // // //         unreadCount: unreadCount,
// // // // // // //         avatar: avatar,
// // // // // // //         hasCheckmark: hasCheckmark,
// // // // // // //         email: email,
// // // // // // //         messages: [],
// // // // // // //       );
// // // // // // //       _chats.add(updatedChat);
// // // // // // //       notifyListeners();
// // // // // // //     } catch (e) {
// // // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // // //     } finally {
// // // // // // //       _isLoading = false;
// // // // // // //       notifyListeners();
// // // // // // //     }
// // // // // // //   }

// // // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // // //     _isLoading = true;
// // // // // // //     _errorMessage = null;
// // // // // // //     notifyListeners();

// // // // // // //     try {
// // // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // // //     } catch (e) {
// // // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // // //     } finally {
// // // // // // //       _isLoading = false;
// // // // // // //       notifyListeners();
// // // // // // //     }
// // // // // // //   }

// // // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // // //     _isLoading = true;
// // // // // // //     notifyListeners();

// // // // // // //     try {
// // // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // // //     } catch (e) {
// // // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // // //     } finally {
// // // // // // //       _isLoading = false;
// // // // // // //       notifyListeners();
// // // // // // //     }
// // // // // // //   }

// // // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // // //     if (text.trim().isEmpty) return;

// // // // // // //     _errorMessage = null;

// // // // // // //     try {
// // // // // // //       final now = DateTime.now();
// // // // // // //       final formattedTime = _formatTo12Hour(now);
// // // // // // //       final message = {
// // // // // // //         'text': text.trim(),
// // // // // // //         'isMe': isMe,
// // // // // // //         'messageId': _uuid.v4(),
// // // // // // //         'time': now.toIso8601String(),
// // // // // // //       };
// // // // // // //       _localMessages.add({
// // // // // // //         ...message,
// // // // // // //         'time': formattedTime,
// // // // // // //         'originalTime': message['time'],
// // // // // // //       });
// // // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // //       if (chatIndex != -1) {
// // // // // // //         final updatedMessages =
// // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // //               ..add(message);
// // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // //           id: _chats[chatIndex].id,
// // // // // // //           name: _chats[chatIndex].name,
// // // // // // //           message: text,
// // // // // // //           time: formattedTime,
// // // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // //           email: _chats[chatIndex].email,
// // // // // // //           messages: updatedMessages,
// // // // // // //         );
// // // // // // //         notifyListeners();
// // // // // // //       }
// // // // // // //       _scrollToBottom(attempts: 5);
// // // // // // //       _messageController.clear();
// // // // // // //     } catch (e) {
// // // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // // //       notifyListeners();
// // // // // // //     }
// // // // // // //   }

// // // // // // //   Future<bool> deleteMessage(
// // // // // // //       String chatId, Map<String, dynamic> message) async {
// // // // // // //     _errorMessage = null;

// // // // // // //     try {
// // // // // // //       // استدعاء الـ repository لمسح الرسالة باستخدام messageId
// // // // // // //       final messageId = message['messageId'] as String;
// // // // // // //       print('Attempting to delete message with ID: $messageId'); // تصحيح
// // // // // // //       await _chatRepository.deleteMessage(chatId, messageId);
// // // // // // //       print('Message deletion requested successfully'); // تصحيح

// // // // // // //       // إزالة الرسالة محليًا من _localMessages
// // // // // // //       _localMessages.removeWhere((msg) {
// // // // // // //         return msg['messageId'] == messageId;
// // // // // // //       });

// // // // // // //       // تحديث الـ chats
// // // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // // //       if (chatIndex != -1) {
// // // // // // //         final updatedMessages =
// // // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // // //               ..removeWhere((msg) {
// // // // // // //                 return msg['messageId'] == messageId;
// // // // // // //               });
// // // // // // //         final lastMessage =
// // // // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // // //         _chats[chatIndex] = ChatModel(
// // // // // // //           id: _chats[chatIndex].id,
// // // // // // //           name: _chats[chatIndex].name,
// // // // // // //           message: lastMessage,
// // // // // // //           time: _chats[chatIndex].time,
// // // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // // //           email: _chats[chatIndex].email,
// // // // // // //           messages: updatedMessages,
// // // // // // //         );
// // // // // // //         notifyListeners();
// // // // // // //       }

// // // // // // //       // تحديث الـ Stream
// // // // // // //       _listenToMessages(chatId);
// // // // // // //       return true;
// // // // // // //     } catch (e) {
// // // // // // //       print('Error deleting message: $e'); // تصحيح
// // // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // // //       notifyListeners();
// // // // // // //       return false;
// // // // // // //     }
// // // // // // //   }

// // // // // // //   @override
// // // // // // //   void dispose() {
// // // // // // //     _chatSubscription.cancel();
// // // // // // //     _messagesSubscription?.cancel();
// // // // // // //     _scrollController.dispose();
// // // // // // //     _messageController.dispose();
// // // // // // //     super.dispose();
// // // // // // //   }
// // // // // // // }

// // // // // // import 'dart:async';
// // // // // // import 'dart:io';
// // // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // // import 'package:flutter/material.dart';
// // // // // // import 'package:uuid/uuid.dart';

// // // // // // class ChatViewModel extends ChangeNotifier {
// // // // // //   final ChatRepository _chatRepository;
// // // // // //   List<ChatModel> _chats = [];
// // // // // //   List<ChatModel> _filteredChats = [];
// // // // // //   List<Map<String, dynamic>> _localMessages = [];
// // // // // //   bool _isLoading = false;
// // // // // //   String? _errorMessage;
// // // // // //   late StreamSubscription _chatSubscription;
// // // // // //   final Uuid _uuid = const Uuid();
// // // // // //   final ScrollController _scrollController = ScrollController();
// // // // // //   final TextEditingController _messageController = TextEditingController();
// // // // // //   StreamSubscription? _messagesSubscription;

// // // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // // // //   bool get isLoading => _isLoading;
// // // // // //   String? get errorMessage => _errorMessage;
// // // // // //   ScrollController get scrollController => _scrollController;
// // // // // //   TextEditingController get messageController => _messageController;

// // // // // //   ChatViewModel(this._chatRepository) {
// // // // // //     _startListeningToChats();
// // // // // //   }

// // // // // //   void _startListeningToChats() {
// // // // // //     _isLoading = true;
// // // // // //     notifyListeners();

// // // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // // //       (chats) {
// // // // // //         _chats = chats;
// // // // // //         _filteredChats = [];
// // // // // //         _isLoading = false;
// // // // // //         _errorMessage = null;
// // // // // //         notifyListeners();
// // // // // //       },
// // // // // //       onError: (e) {
// // // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // // //         _isLoading = false;
// // // // // //         notifyListeners();
// // // // // //       },
// // // // // //     );
// // // // // //   }

// // // // // //   void initChatMessages(ChatModel chat) {
// // // // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // // // //       final time = DateTime.parse(msg['time']);
// // // // // //       final formattedTime = _formatTo12Hour(time);
// // // // // //       return {
// // // // // //         ...msg,
// // // // // //         'time': formattedTime,
// // // // // //         'originalTime': msg['time'],
// // // // // //       };
// // // // // //     }));
// // // // // //     _listenToMessages(chat.id);
// // // // // //   }

// // // // // //   void _listenToMessages(String chatId) {
// // // // // //     _messagesSubscription?.cancel();
// // // // // //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// // // // // //       (chats) {
// // // // // //         final chat = chats.firstWhere(
// // // // // //           (c) => c.id == chatId,
// // // // // //           orElse: () => ChatModel(
// // // // // //             id: chatId,
// // // // // //             name: '',
// // // // // //             message: '',
// // // // // //             time: '',
// // // // // //             unreadCount: 0,
// // // // // //             avatar: '',
// // // // // //             hasCheckmark: false,
// // // // // //             email: '',
// // // // // //             messages: [],
// // // // // //           ),
// // // // // //         );
// // // // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // // // //           final time = DateTime.parse(msg['time']);
// // // // // //           final formattedTime = _formatTo12Hour(time);
// // // // // //           return {
// // // // // //             ...msg,
// // // // // //             'time': formattedTime,
// // // // // //             'originalTime': msg['time'],
// // // // // //           };
// // // // // //         }));
// // // // // //         notifyListeners();
// // // // // //         _scrollToBottom(attempts: 5);
// // // // // //       },
// // // // // //       onError: (e) {
// // // // // //         _errorMessage = 'Failed to load messages: $e';
// // // // // //         notifyListeners();
// // // // // //       },
// // // // // //     );
// // // // // //   }

// // // // // //   String _formatTo12Hour(DateTime time) {
// // // // // //     final hour = time.hour % 12;
// // // // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // // // //     final displayHour = hour == 0 ? 12 : hour;
// // // // // //     return '$displayHour:$minute $period';
// // // // // //   }

// // // // // //   void _scrollToBottom({int attempts = 5}) {
// // // // // //     if (attempts <= 0) return;

// // // // // //     if (_scrollController.hasClients) {
// // // // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // // // //       _scrollController.animateTo(
// // // // // //         currentExtent,
// // // // // //         duration: const Duration(milliseconds: 300),
// // // // // //         curve: Curves.easeOut,
// // // // // //       );
// // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // //         if (_scrollController.hasClients &&
// // // // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // // // //           _scrollToBottom(attempts: attempts - 1);
// // // // // //         }
// // // // // //       });
// // // // // //     } else {
// // // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // // //         _scrollToBottom(attempts: attempts - 1);
// // // // // //       });
// // // // // //     }
// // // // // //   }

// // // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // // //     return _chatRepository.getChatsStream();
// // // // // //   }

// // // // // //   void filterChats(String query) {
// // // // // //     if (query.isEmpty) {
// // // // // //       _filteredChats = [];
// // // // // //     } else {
// // // // // //       _filteredChats = _chats
// // // // // //           .where((chat) =>
// // // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // // //           .toList();
// // // // // //     }
// // // // // //     notifyListeners();
// // // // // //   }

// // // // // //   Future<void> createChat({
// // // // // //     required String name,
// // // // // //     required String message,
// // // // // //     required String time,
// // // // // //     required int unreadCount,
// // // // // //     required String avatar,
// // // // // //     required bool hasCheckmark,
// // // // // //     File? image,
// // // // // //     required String email,
// // // // // //   }) async {
// // // // // //     _isLoading = true;
// // // // // //     _errorMessage = null;
// // // // // //     notifyListeners();

// // // // // //     try {
// // // // // //       final newChat = ChatModel(
// // // // // //         id: '',
// // // // // //         name: name,
// // // // // //         message: message,
// // // // // //         time: time,
// // // // // //         unreadCount: unreadCount,
// // // // // //         avatar: avatar,
// // // // // //         hasCheckmark: hasCheckmark,
// // // // // //         email: email,
// // // // // //         messages: [],
// // // // // //       );
// // // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // // //       final updatedChat = ChatModel(
// // // // // //         id: docRef.id,
// // // // // //         name: name,
// // // // // //         message: message,
// // // // // //         time: time,
// // // // // //         unreadCount: unreadCount,
// // // // // //         avatar: avatar,
// // // // // //         hasCheckmark: hasCheckmark,
// // // // // //         email: email,
// // // // // //         messages: [],
// // // // // //       );
// // // // // //       _chats.add(updatedChat);
// // // // // //       notifyListeners();
// // // // // //     } catch (e) {
// // // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // // //     } finally {
// // // // // //       _isLoading = false;
// // // // // //       notifyListeners();
// // // // // //     }
// // // // // //   }

// // // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // // //     _isLoading = true;
// // // // // //     _errorMessage = null;
// // // // // //     notifyListeners();

// // // // // //     try {
// // // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // // //     } catch (e) {
// // // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // // //     } finally {
// // // // // //       _isLoading = false;
// // // // // //       notifyListeners();
// // // // // //     }
// // // // // //   }

// // // // // //   Future<void> deleteChat(String chatId) async {
// // // // // //     _isLoading = true;
// // // // // //     notifyListeners();

// // // // // //     try {
// // // // // //       await _chatRepository.deleteChat(chatId);
// // // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // // //     } catch (e) {
// // // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // // //     } finally {
// // // // // //       _isLoading = false;
// // // // // //       notifyListeners();
// // // // // //     }
// // // // // //   }

// // // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // // //     if (text.trim().isEmpty) return;

// // // // // //     _errorMessage = null;

// // // // // //     try {
// // // // // //       final now = DateTime.now();
// // // // // //       final formattedTime = _formatTo12Hour(now);
// // // // // //       final message = {
// // // // // //         'text': text.trim(),
// // // // // //         'isMe': isMe,
// // // // // //         'messageId': _uuid.v4(),
// // // // // //         'time': now.toIso8601String(),
// // // // // //       };
// // // // // //       _localMessages.add({
// // // // // //         ...message,
// // // // // //         'time': formattedTime,
// // // // // //         'originalTime': message['time'],
// // // // // //       });
// // // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // //       if (chatIndex != -1) {
// // // // // //         final updatedMessages =
// // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // //               ..add(message);
// // // // // //         _chats[chatIndex] = ChatModel(
// // // // // //           id: _chats[chatIndex].id,
// // // // // //           name: _chats[chatIndex].name,
// // // // // //           message: text,
// // // // // //           time: formattedTime,
// // // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // //           email: _chats[chatIndex].email,
// // // // // //           messages: updatedMessages,
// // // // // //         );
// // // // // //         notifyListeners();
// // // // // //       }
// // // // // //       _scrollToBottom(attempts: 5);
// // // // // //       _messageController.clear();
// // // // // //     } catch (e) {
// // // // // //       _errorMessage = 'Failed to send message: $e';
// // // // // //       notifyListeners();
// // // // // //     }
// // // // // //   }

// // // // // //   Future<bool> deleteMessage(
// // // // // //       String chatId, Map<String, dynamic> message) async {
// // // // // //     _errorMessage = null;

// // // // // //     try {
// // // // // //       // استدعاء الـ repository لمسح الرسالة باستخدام messageId
// // // // // //       final messageId = message['messageId'] as String;
// // // // // //       print('Attempting to delete message with ID: $messageId'); // تصحيح
// // // // // //       await _chatRepository.deleteMessage(chatId, messageId);
// // // // // //       print('Message deletion requested successfully'); // تصحيح

// // // // // //       // إزالة الرسالة محليًا من _localMessages
// // // // // //       _localMessages.removeWhere((msg) {
// // // // // //         return msg['messageId'] == messageId;
// // // // // //       });

// // // // // //       // تحديث الـ chats
// // // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // // //       if (chatIndex != -1) {
// // // // // //         final updatedMessages =
// // // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // // //               ..removeWhere((msg) {
// // // // // //                 return msg['messageId'] == messageId;
// // // // // //               });
// // // // // //         final lastMessage =
// // // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // // //         print('Updating chat with last message: $lastMessage'); // تصحيح
// // // // // //         _chats[chatIndex] = ChatModel(
// // // // // //           id: _chats[chatIndex].id,
// // // // // //           name: _chats[chatIndex].name,
// // // // // //           message: lastMessage,
// // // // // //           time: _chats[chatIndex].time,
// // // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // // //           avatar: _chats[chatIndex].avatar,
// // // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // // //           email: _chats[chatIndex].email,
// // // // // //           messages: updatedMessages,
// // // // // //         );
// // // // // //         notifyListeners();
// // // // // //       }

// // // // // //       // تحديث الـ Stream
// // // // // //       _listenToMessages(chatId);
// // // // // //       return true;
// // // // // //     } catch (e) {
// // // // // //       print('Error deleting message: $e'); // تصحيح
// // // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // // //       notifyListeners();
// // // // // //       return false;
// // // // // //     }
// // // // // //   }

// // // // // //   @override
// // // // // //   void dispose() {
// // // // // //     _chatSubscription.cancel();
// // // // // //     _messagesSubscription?.cancel();
// // // // // //     _scrollController.dispose();
// // // // // //     _messageController.dispose();
// // // // // //     super.dispose();
// // // // // //   }
// // // // // // }

// // // // // import 'dart:async';
// // // // // import 'dart:io';
// // // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // // import 'package:flutter/material.dart';
// // // // // import 'package:uuid/uuid.dart';

// // // // // class ChatViewModel extends ChangeNotifier {
// // // // //   final ChatRepository _chatRepository;
// // // // //   List<ChatModel> _chats = [];
// // // // //   List<ChatModel> _filteredChats = [];
// // // // //   List<Map<String, dynamic>> _localMessages = [];
// // // // //   bool _isLoading = false;
// // // // //   String? _errorMessage;
// // // // //   late StreamSubscription _chatSubscription;
// // // // //   final Uuid _uuid = const Uuid();
// // // // //   final ScrollController _scrollController = ScrollController();
// // // // //   final TextEditingController _messageController = TextEditingController();
// // // // //   StreamSubscription? _messagesSubscription;
// // // // //   String? _avatarUrl; // متغير جديد لتخزين رابط الصورة

// // // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // // //   bool get isLoading => _isLoading;
// // // // //   String? get errorMessage => _errorMessage;
// // // // //   ScrollController get scrollController => _scrollController;
// // // // //   TextEditingController get messageController => _messageController;
// // // // //   String? get avatarUrl => _avatarUrl; // Getter للـ avatarUrl

// // // // //   ChatViewModel(this._chatRepository) {
// // // // //     _startListeningToChats();
// // // // //   }

// // // // //   void _startListeningToChats() {
// // // // //     _isLoading = true;
// // // // //     notifyListeners();

// // // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // // //       (chats) {
// // // // //         _chats = chats;
// // // // //         _filteredChats = [];
// // // // //         _isLoading = false;
// // // // //         _errorMessage = null;
// // // // //         notifyListeners();
// // // // //       },
// // // // //       onError: (e) {
// // // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // // //         _isLoading = false;
// // // // //         notifyListeners();
// // // // //       },
// // // // //     );
// // // // //   }

// // // // //   void initChatMessages(ChatModel chat) {
// // // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // // //       final time = DateTime.parse(msg['time']);
// // // // //       final formattedTime = _formatTo12Hour(time);
// // // // //       return {
// // // // //         ...msg,
// // // // //         'time': formattedTime,
// // // // //         'originalTime': msg['time'],
// // // // //       };
// // // // //     }));
// // // // //     _listenToMessages(chat.id);
// // // // //   }

// // // // //   void _listenToMessages(String chatId) {
// // // // //     _messagesSubscription?.cancel();
// // // // //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// // // // //       (chats) {
// // // // //         final chat = chats.firstWhere(
// // // // //           (c) => c.id == chatId,
// // // // //           orElse: () => ChatModel(
// // // // //             id: chatId,
// // // // //             name: '',
// // // // //             message: '',
// // // // //             time: '',
// // // // //             unreadCount: 0,
// // // // //             avatar: '',
// // // // //             hasCheckmark: false,
// // // // //             email: '',
// // // // //             messages: [],
// // // // //           ),
// // // // //         );
// // // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // // //           final time = DateTime.parse(msg['time']);
// // // // //           final formattedTime = _formatTo12Hour(time);
// // // // //           return {
// // // // //             ...msg,
// // // // //             'time': formattedTime,
// // // // //             'originalTime': msg['time'],
// // // // //           };
// // // // //         }));
// // // // //         notifyListeners();
// // // // //         _scrollToBottom(attempts: 5);
// // // // //       },
// // // // //       onError: (e) {
// // // // //         _errorMessage = 'Failed to load messages: $e';
// // // // //         notifyListeners();
// // // // //       },
// // // // //     );
// // // // //   }

// // // // //   String _formatTo12Hour(DateTime time) {
// // // // //     final hour = time.hour % 12;
// // // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // // //     final displayHour = hour == 0 ? 12 : hour;
// // // // //     return '$displayHour:$minute $period';
// // // // //   }

// // // // //   void _scrollToBottom({int attempts = 5}) {
// // // // //     if (attempts <= 0) return;

// // // // //     if (_scrollController.hasClients) {
// // // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // // //       _scrollController.animateTo(
// // // // //         currentExtent,
// // // // //         duration: const Duration(milliseconds: 300),
// // // // //         curve: Curves.easeOut,
// // // // //       );
// // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // //         if (_scrollController.hasClients &&
// // // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // // //           _scrollToBottom(attempts: attempts - 1);
// // // // //         }
// // // // //       });
// // // // //     } else {
// // // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // // //         _scrollToBottom(attempts: attempts - 1);
// // // // //       });
// // // // //     }
// // // // //   }

// // // // //   Stream<List<ChatModel>> getChatsStream() {
// // // // //     return _chatRepository.getChatsStream();
// // // // //   }

// // // // //   void filterChats(String query) {
// // // // //     if (query.isEmpty) {
// // // // //       _filteredChats = [];
// // // // //     } else {
// // // // //       _filteredChats = _chats
// // // // //           .where((chat) =>
// // // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // // //           .toList();
// // // // //     }
// // // // //     notifyListeners();
// // // // //   }

// // // // //   Future<void> createChat({
// // // // //     required String name,
// // // // //     required String message,
// // // // //     required String time,
// // // // //     required int unreadCount,
// // // // //     required String avatar,
// // // // //     required bool hasCheckmark,
// // // // //     File? image,
// // // // //     required String email,
// // // // //   }) async {
// // // // //     _isLoading = true;
// // // // //     _errorMessage = null;
// // // // //     notifyListeners();

// // // // //     try {
// // // // //       final newChat = ChatModel(
// // // // //         id: '',
// // // // //         name: name,
// // // // //         message: message,
// // // // //         time: time,
// // // // //         unreadCount: unreadCount,
// // // // //         avatar: avatar,
// // // // //         hasCheckmark: hasCheckmark,
// // // // //         email: email,
// // // // //         messages: [],
// // // // //       );
// // // // //       final docRef = await _chatRepository.createChat(newChat);
// // // // //       final updatedChat = ChatModel(
// // // // //         id: docRef.id,
// // // // //         name: name,
// // // // //         message: message,
// // // // //         time: time,
// // // // //         unreadCount: unreadCount,
// // // // //         avatar: avatar,
// // // // //         hasCheckmark: hasCheckmark,
// // // // //         email: email,
// // // // //         messages: [],
// // // // //       );
// // // // //       _chats.add(updatedChat);
// // // // //       notifyListeners();
// // // // //     } catch (e) {
// // // // //       _errorMessage = 'Failed to create chat: $e';
// // // // //     } finally {
// // // // //       _isLoading = false;
// // // // //       notifyListeners();
// // // // //     }
// // // // //   }

// // // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // // //     _isLoading = true;
// // // // //     _errorMessage = null;
// // // // //     notifyListeners();

// // // // //     try {
// // // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // // //     } catch (e) {
// // // // //       _errorMessage = 'Failed to add chat: $e';
// // // // //     } finally {
// // // // //       _isLoading = false;
// // // // //       notifyListeners();
// // // // //     }
// // // // //   }

// // // // //   Future<void> deleteChat(String chatId) async {
// // // // //     _isLoading = true;
// // // // //     notifyListeners();

// // // // //     try {
// // // // //       await _chatRepository.deleteChat(chatId);
// // // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // // //     } catch (e) {
// // // // //       _errorMessage = 'Failed to delete chat: $e';
// // // // //     } finally {
// // // // //       _isLoading = false;
// // // // //       notifyListeners();
// // // // //     }
// // // // //   }

// // // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // // //     if (text.trim().isEmpty) return;

// // // // //     _errorMessage = null;

// // // // //     try {
// // // // //       final now = DateTime.now();
// // // // //       final formattedTime = _formatTo12Hour(now);
// // // // //       final message = {
// // // // //         'text': text.trim(),
// // // // //         'isMe': isMe,
// // // // //         'messageId': _uuid.v4(),
// // // // //         'time': now.toIso8601String(),
// // // // //       };
// // // // //       _localMessages.add({
// // // // //         ...message,
// // // // //         'time': formattedTime,
// // // // //         'originalTime': message['time'],
// // // // //       });
// // // // //       await _chatRepository.updateMessages(chatId, message);
// // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // //       if (chatIndex != -1) {
// // // // //         final updatedMessages =
// // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // //               ..add(message);
// // // // //         _chats[chatIndex] = ChatModel(
// // // // //           id: _chats[chatIndex].id,
// // // // //           name: _chats[chatIndex].name,
// // // // //           message: text,
// // // // //           time: formattedTime,
// // // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // // //           avatar: _chats[chatIndex].avatar,
// // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // //           email: _chats[chatIndex].email,
// // // // //           messages: updatedMessages,
// // // // //         );
// // // // //         notifyListeners();
// // // // //       }
// // // // //       _scrollToBottom(attempts: 5);
// // // // //       _messageController.clear();
// // // // //     } catch (e) {
// // // // //       _errorMessage = 'Failed to send message: $e';
// // // // //       notifyListeners();
// // // // //     }
// // // // //   }

// // // // //   Future<bool> deleteMessage(
// // // // //       String chatId, Map<String, dynamic> message) async {
// // // // //     _errorMessage = null;

// // // // //     try {
// // // // //       final messageId = message['messageId'] as String;
// // // // //       print('Attempting to delete message with ID: $messageId');
// // // // //       await _chatRepository.deleteMessage(chatId, messageId);
// // // // //       print('Message deletion requested successfully');

// // // // //       _localMessages.removeWhere((msg) {
// // // // //         return msg['messageId'] == messageId;
// // // // //       });

// // // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // // //       if (chatIndex != -1) {
// // // // //         final updatedMessages =
// // // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // // //               ..removeWhere((msg) {
// // // // //                 return msg['messageId'] == messageId;
// // // // //               });
// // // // //         final lastMessage =
// // // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // // //         print('Updating chat with last message: $lastMessage');
// // // // //         _chats[chatIndex] = ChatModel(
// // // // //           id: _chats[chatIndex].id,
// // // // //           name: _chats[chatIndex].name,
// // // // //           message: lastMessage,
// // // // //           time: _chats[chatIndex].time,
// // // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // // //           avatar: _chats[chatIndex].avatar,
// // // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // // //           email: _chats[chatIndex].email,
// // // // //           messages: updatedMessages,
// // // // //         );
// // // // //         notifyListeners();
// // // // //       }

// // // // //       _listenToMessages(chatId);
// // // // //       return true;
// // // // //     } catch (e) {
// // // // //       print('Error deleting message: $e');
// // // // //       _errorMessage = 'Failed to delete message: $e';
// // // // //       notifyListeners();
// // // // //       return false;
// // // // //     }
// // // // //   }

// // // // //   Future<void> fetchUserByEmail(String email) async {
// // // // //     try {
// // // // //       final userData = await _chatRepository.getUserByEmail(email);
// // // // //       if (userData != null && userData['avatar'] != null) {
// // // // //         _avatarUrl = userData['avatar'] as String;
// // // // //       } else {
// // // // //         _avatarUrl = null; // لو مفيش صورة أو المستخدم مش موجود
// // // // //       }
// // // // //       notifyListeners();
// // // // //     } catch (e) {
// // // // //       print('Error fetching user by email: $e');
// // // // //       _avatarUrl = null;
// // // // //       notifyListeners();
// // // // //     }
// // // // //   }

// // // // //   @override
// // // // //   void dispose() {
// // // // //     _chatSubscription.cancel();
// // // // //     _messagesSubscription?.cancel();
// // // // //     _scrollController.dispose();
// // // // //     _messageController.dispose();
// // // // //     super.dispose();
// // // // //   }
// // // // // }

// // // // import 'dart:async';
// // // // import 'dart:io';
// // // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // // import 'package:flutter/material.dart';
// // // // import 'package:uuid/uuid.dart';

// // // // class ChatViewModel extends ChangeNotifier {
// // // //   final ChatRepository _chatRepository;
// // // //   List<ChatModel> _chats = [];
// // // //   List<ChatModel> _filteredChats = [];
// // // //   List<Map<String, dynamic>> _localMessages = [];
// // // //   bool _isLoading = false;
// // // //   String? _errorMessage;
// // // //   late StreamSubscription _chatSubscription;
// // // //   final Uuid _uuid = const Uuid();
// // // //   final ScrollController _scrollController = ScrollController();
// // // //   final TextEditingController _messageController = TextEditingController();
// // // //   StreamSubscription? _messagesSubscription;
// // // //   String? _avatarUrl;

// // // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // // //   bool get isLoading => _isLoading;
// // // //   String? get errorMessage => _errorMessage;
// // // //   ScrollController get scrollController => _scrollController;
// // // //   TextEditingController get messageController => _messageController;
// // // //   String? get avatarUrl => _avatarUrl;

// // // //   ChatViewModel(this._chatRepository) {
// // // //     _startListeningToChats();
// // // //   }

// // // //   void _startListeningToChats() {
// // // //     _isLoading = true;
// // // //     notifyListeners();

// // // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // // //       (chats) {
// // // //         _chats = chats;
// // // //         _filteredChats = [];
// // // //         _isLoading = false;
// // // //         _errorMessage = null;
// // // //         notifyListeners();
// // // //       },
// // // //       onError: (e) {
// // // //         _errorMessage = 'Failed to fetch chats: $e';
// // // //         _isLoading = false;
// // // //         notifyListeners();
// // // //       },
// // // //     );
// // // //   }

// // // //   void initChatMessages(ChatModel chat) {
// // // //     _localMessages = List.from(chat.messages.map((msg) {
// // // //       final time = DateTime.parse(msg['time']);
// // // //       final formattedTime = _formatTo12Hour(time);
// // // //       return {
// // // //         ...msg,
// // // //         'time': formattedTime,
// // // //         'originalTime': msg['time'],
// // // //       };
// // // //     }));
// // // //     _listenToMessages(chat.id);
// // // //   }

// // // //   void _listenToMessages(String chatId) {
// // // //     _messagesSubscription?.cancel();
// // // //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// // // //       (chats) {
// // // //         final chat = chats.firstWhere(
// // // //           (c) => c.id == chatId,
// // // //           orElse: () => ChatModel(
// // // //             id: chatId,
// // // //             name: '',
// // // //             message: '',
// // // //             time: '',
// // // //             unreadCount: 0,
// // // //             avatar: '',
// // // //             hasCheckmark: false,
// // // //             email: '',
// // // //             messages: [],
// // // //           ),
// // // //         );
// // // //         _localMessages = List.from(chat.messages.map((msg) {
// // // //           final time = DateTime.parse(msg['time']);
// // // //           final formattedTime = _formatTo12Hour(time);
// // // //           return {
// // // //             ...msg,
// // // //             'time': formattedTime,
// // // //             'originalTime': msg['time'],
// // // //           };
// // // //         }));
// // // //         notifyListeners();
// // // //         _scrollToBottom(attempts: 5);
// // // //       },
// // // //       onError: (e) {
// // // //         _errorMessage = 'Failed to load messages: $e';
// // // //         notifyListeners();
// // // //       },
// // // //     );
// // // //   }

// // // //   String _formatTo12Hour(DateTime time) {
// // // //     final hour = time.hour % 12;
// // // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // // //     final minute = time.minute.toString().padLeft(2, '0');
// // // //     final displayHour = hour == 0 ? 12 : hour;
// // // //     return '$displayHour:$minute $period';
// // // //   }

// // // //   void _scrollToBottom({int attempts = 5}) {
// // // //     if (attempts <= 0) return;

// // // //     if (_scrollController.hasClients) {
// // // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // // //       _scrollController.animateTo(
// // // //         currentExtent,
// // // //         duration: const Duration(milliseconds: 300),
// // // //         curve: Curves.easeOut,
// // // //       );
// // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // //         if (_scrollController.hasClients &&
// // // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // // //           _scrollToBottom(attempts: attempts - 1);
// // // //         }
// // // //       });
// // // //     } else {
// // // //       Future.delayed(const Duration(milliseconds: 200), () {
// // // //         _scrollToBottom(attempts: attempts - 1);
// // // //       });
// // // //     }
// // // //   }

// // // //   Stream<List<ChatModel>> getChatsStream() {
// // // //     return _chatRepository.getChatsStream();
// // // //   }

// // // //   void filterChats(String query) {
// // // //     if (query.isEmpty) {
// // // //       _filteredChats = [];
// // // //     } else {
// // // //       _filteredChats = _chats
// // // //           .where((chat) =>
// // // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // // //           .toList();
// // // //     }
// // // //     notifyListeners();
// // // //   }

// // // //   Future<void> createChat({
// // // //     required String name,
// // // //     required String message,
// // // //     required String time,
// // // //     required int unreadCount,
// // // //     required String avatar,
// // // //     required bool hasCheckmark,
// // // //     File? image,
// // // //     required String email,
// // // //   }) async {
// // // //     _isLoading = true;
// // // //     _errorMessage = null;
// // // //     notifyListeners();

// // // //     try {
// // // //       final newChat = ChatModel(
// // // //         id: '',
// // // //         name: name,
// // // //         message: message,
// // // //         time: time,
// // // //         unreadCount: unreadCount,
// // // //         avatar: avatar,
// // // //         hasCheckmark: hasCheckmark,
// // // //         email: email,
// // // //         messages: [],
// // // //       );
// // // //       final docRef = await _chatRepository.createChat(newChat);
// // // //       final updatedChat = ChatModel(
// // // //         id: docRef.id,
// // // //         name: name,
// // // //         message: message,
// // // //         time: time,
// // // //         unreadCount: unreadCount,
// // // //         avatar: avatar,
// // // //         hasCheckmark: hasCheckmark,
// // // //         email: email,
// // // //         messages: [],
// // // //       );
// // // //       _chats.add(updatedChat);
// // // //       notifyListeners();
// // // //     } catch (e) {
// // // //       _errorMessage = 'Failed to create chat: $e';
// // // //     } finally {
// // // //       _isLoading = false;
// // // //       notifyListeners();
// // // //     }
// // // //   }

// // // //   Future<void> addChatWithUser(String email, String name, String avatar) async {
// // // //     _isLoading = true;
// // // //     _errorMessage = null;
// // // //     notifyListeners();

// // // //     try {
// // // //       await _chatRepository.addChatWithUser(email, name, avatar);
// // // //     } catch (e) {
// // // //       _errorMessage = 'Failed to add chat: $e';
// // // //     } finally {
// // // //       _isLoading = false;
// // // //       notifyListeners();
// // // //     }
// // // //   }

// // // //   Future<void> deleteChat(String chatId) async {
// // // //     _isLoading = true;
// // // //     notifyListeners();

// // // //     try {
// // // //       await _chatRepository.deleteChat(chatId);
// // // //       _chats.removeWhere((chat) => chat.id == chatId);
// // // //     } catch (e) {
// // // //       _errorMessage = 'Failed to delete chat: $e';
// // // //     } finally {
// // // //       _isLoading = false;
// // // //       notifyListeners();
// // // //     }
// // // //   }

// // // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // // //     if (text.trim().isEmpty) return;

// // // //     _errorMessage = null;

// // // //     try {
// // // //       final now = DateTime.now();
// // // //       final formattedTime = _formatTo12Hour(now);
// // // //       final message = {
// // // //         'text': text.trim(),
// // // //         'isMe': isMe,
// // // //         'messageId': _uuid.v4(),
// // // //         'time': now.toIso8601String(),
// // // //       };
// // // //       _localMessages.add({
// // // //         ...message,
// // // //         'time': formattedTime,
// // // //         'originalTime': message['time'],
// // // //       });
// // // //       await _chatRepository.updateMessages(chatId, message);
// // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // //       if (chatIndex != -1) {
// // // //         final updatedMessages =
// // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // //               ..add(message);
// // // //         _chats[chatIndex] = ChatModel(
// // // //           id: _chats[chatIndex].id,
// // // //           name: _chats[chatIndex].name,
// // // //           message: text,
// // // //           time: formattedTime,
// // // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // // //           avatar: _chats[chatIndex].avatar,
// // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // //           email: _chats[chatIndex].email,
// // // //           messages: updatedMessages,
// // // //         );
// // // //         notifyListeners();
// // // //       }
// // // //       _scrollToBottom(attempts: 5);
// // // //       _messageController.clear();
// // // //     } catch (e) {
// // // //       _errorMessage = 'Failed to send message: $e';
// // // //       notifyListeners();
// // // //     }
// // // //   }

// // // //   Future<bool> deleteMessage(
// // // //       String chatId, Map<String, dynamic> message) async {
// // // //     _errorMessage = null;

// // // //     try {
// // // //       final messageId = message['messageId'] as String;
// // // //       print('Attempting to delete message with ID: $messageId');
// // // //       await _chatRepository.deleteMessage(chatId, messageId);
// // // //       print('Message deletion requested successfully');

// // // //       _localMessages.removeWhere((msg) {
// // // //         return msg['messageId'] == messageId;
// // // //       });

// // // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // // //       if (chatIndex != -1) {
// // // //         final updatedMessages =
// // // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // // //               ..removeWhere((msg) {
// // // //                 return msg['messageId'] == messageId;
// // // //               });
// // // //         final lastMessage =
// // // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // // //         print('Updating chat with last message: $lastMessage');
// // // //         _chats[chatIndex] = ChatModel(
// // // //           id: _chats[chatIndex].id,
// // // //           name: _chats[chatIndex].name,
// // // //           message: lastMessage,
// // // //           time: _chats[chatIndex].time,
// // // //           unreadCount: _chats[chatIndex].unreadCount,
// // // //           avatar: _chats[chatIndex].avatar,
// // // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // // //           email: _chats[chatIndex].email,
// // // //           messages: updatedMessages,
// // // //         );
// // // //         notifyListeners();
// // // //       }

// // // //       _listenToMessages(chatId);
// // // //       return true;
// // // //     } catch (e) {
// // // //       print('Error deleting message: $e');
// // // //       _errorMessage = 'Failed to delete message: $e';
// // // //       notifyListeners();
// // // //       return false;
// // // //     }
// // // //   }

// // // //   Future<void> fetchUserByEmail(String email) async {
// // // //     if (email.trim().isEmpty) {
// // // //       _avatarUrl = null;
// // // //       notifyListeners();
// // // //       return;
// // // //     }
// // // //     try {
// // // //       final userData = await _chatRepository.getUserByEmail(email);
// // // //       if (userData != null &&
// // // //           userData['avatar'] != null &&
// // // //           userData['avatar'].isNotEmpty) {
// // // //         _avatarUrl = userData['avatar'] as String;
// // // //         print('Avatar URL set: $_avatarUrl'); // تصحيح
// // // //       } else {
// // // //         _avatarUrl = null;
// // // //         print('No valid avatar found for email: $email'); // تصحيح
// // // //       }
// // // //       notifyListeners();
// // // //     } catch (e) {
// // // //       print('Error fetching user by email: $e');
// // // //       _avatarUrl = null;
// // // //       notifyListeners();
// // // //     }
// // // //   }

// // // //   @override
// // // //   void dispose() {
// // // //     _chatSubscription.cancel();
// // // //     _messagesSubscription?.cancel();
// // // //     _scrollController.dispose();
// // // //     _messageController.dispose();
// // // //     super.dispose();
// // // //   }
// // // // }

// // // import 'dart:async';
// // // import 'dart:io';
// // // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // // import 'package:flutter/material.dart';
// // // import 'package:uuid/uuid.dart';

// // // class ChatViewModel extends ChangeNotifier {
// // //   final ChatRepository _chatRepository;
// // //   List<ChatModel> _chats = [];
// // //   List<ChatModel> _filteredChats = [];
// // //   List<Map<String, dynamic>> _localMessages = [];
// // //   bool _isLoading = false;
// // //   String? _errorMessage;
// // //   late StreamSubscription _chatSubscription;
// // //   final Uuid _uuid = const Uuid();
// // //   final ScrollController _scrollController = ScrollController();
// // //   final TextEditingController _messageController = TextEditingController();
// // //   StreamSubscription? _messagesSubscription;
// // //   String? _avatarUrl;

// // //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// // //   List<Map<String, dynamic>> get localMessages => _localMessages;
// // //   bool get isLoading => _isLoading;
// // //   String? get errorMessage => _errorMessage;
// // //   ScrollController get scrollController => _scrollController;
// // //   TextEditingController get messageController => _messageController;
// // //   String? get avatarUrl => _avatarUrl;

// // //   ChatViewModel(this._chatRepository) {
// // //     _startListeningToChats();
// // //   }

// // //   void _startListeningToChats() {
// // //     _isLoading = true;
// // //     notifyListeners();

// // //     _chatSubscription = _chatRepository.getChatsStream().listen(
// // //       (chats) {
// // //         _chats = chats;
// // //         _filteredChats = [];
// // //         _isLoading = false;
// // //         _errorMessage = null;
// // //         notifyListeners();
// // //       },
// // //       onError: (e) {
// // //         _errorMessage = 'Failed to fetch chats: $e';
// // //         _isLoading = false;
// // //         notifyListeners();
// // //       },
// // //     );
// // //   }

// // //   void initChatMessages(ChatModel chat) {
// // //     _localMessages = List.from(chat.messages.map((msg) {
// // //       final time = DateTime.parse(msg['time']);
// // //       final formattedTime = _formatTo12Hour(time);
// // //       return {
// // //         ...msg,
// // //         'time': formattedTime,
// // //         'originalTime': msg['time'],
// // //       };
// // //     }));
// // //     _listenToMessages(chat.id);
// // //   }

// // //   void _listenToMessages(String chatId) {
// // //     _messagesSubscription?.cancel();
// // //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// // //       (chats) {
// // //         final chat = chats.firstWhere(
// // //           (c) => c.id == chatId,
// // //           orElse: () => ChatModel(
// // //             id: chatId,
// // //             name: '',
// // //             message: '',
// // //             time: '',
// // //             unreadCount: 0,
// // //             avatar: '',
// // //             hasCheckmark: false,
// // //             email: '',
// // //             messages: [],
// // //           ),
// // //         );
// // //         _localMessages = List.from(chat.messages.map((msg) {
// // //           final time = DateTime.parse(msg['time']);
// // //           final formattedTime = _formatTo12Hour(time);
// // //           return {
// // //             ...msg,
// // //             'time': formattedTime,
// // //             'originalTime': msg['time'],
// // //           };
// // //         }));
// // //         notifyListeners();
// // //         _scrollToBottom(attempts: 5);
// // //       },
// // //       onError: (e) {
// // //         _errorMessage = 'Failed to load messages: $e';
// // //         notifyListeners();
// // //       },
// // //     );
// // //   }

// // //   String _formatTo12Hour(DateTime time) {
// // //     final hour = time.hour % 12;
// // //     final period = time.hour >= 12 ? 'PM' : 'AM';
// // //     final minute = time.minute.toString().padLeft(2, '0');
// // //     final displayHour = hour == 0 ? 12 : hour;
// // //     return '$displayHour:$minute $period';
// // //   }

// // //   void _scrollToBottom({int attempts = 5}) {
// // //     if (attempts <= 0) return;

// // //     if (_scrollController.hasClients) {
// // //       final currentExtent = _scrollController.position.maxScrollExtent;
// // //       _scrollController.animateTo(
// // //         currentExtent,
// // //         duration: const Duration(milliseconds: 300),
// // //         curve: Curves.easeOut,
// // //       );
// // //       Future.delayed(const Duration(milliseconds: 200), () {
// // //         if (_scrollController.hasClients &&
// // //             _scrollController.position.maxScrollExtent > currentExtent) {
// // //           _scrollToBottom(attempts: attempts - 1);
// // //         }
// // //       });
// // //     } else {
// // //       Future.delayed(const Duration(milliseconds: 200), () {
// // //         _scrollToBottom(attempts: attempts - 1);
// // //       });
// // //     }
// // //   }

// // //   Stream<List<ChatModel>> getChatsStream() {
// // //     return _chatRepository.getChatsStream();
// // //   }

// // //   void filterChats(String query) {
// // //     if (query.isEmpty) {
// // //       _filteredChats = [];
// // //     } else {
// // //       _filteredChats = _chats
// // //           .where((chat) =>
// // //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// // //               chat.message.toLowerCase().contains(query.toLowerCase()))
// // //           .toList();
// // //     }
// // //     notifyListeners();
// // //   }

// // //   Future<void> createChat({
// // //     required String name,
// // //     required String message,
// // //     required String time,
// // //     required int unreadCount,
// // //     required String avatar,
// // //     required bool hasCheckmark,
// // //     File? image,
// // //     required String email,
// // //   }) async {
// // //     _isLoading = true;
// // //     _errorMessage = null;
// // //     notifyListeners();

// // //     try {
// // //       final newChat = ChatModel(
// // //         id: '',
// // //         name: name,
// // //         message: message,
// // //         time: time,
// // //         unreadCount: unreadCount,
// // //         avatar: avatar,
// // //         hasCheckmark: hasCheckmark,
// // //         email: email,
// // //         messages: [],
// // //       );
// // //       final docRef = await _chatRepository.createChat(newChat);
// // //       final updatedChat = ChatModel(
// // //         id: docRef.id,
// // //         name: name,
// // //         message: message,
// // //         time: time,
// // //         unreadCount: unreadCount,
// // //         avatar: avatar,
// // //         hasCheckmark: hasCheckmark,
// // //         email: email,
// // //         messages: [],
// // //       );
// // //       _chats.add(updatedChat);
// // //       notifyListeners();
// // //     } catch (e) {
// // //       _errorMessage = 'Failed to create chat: $e';
// // //     } finally {
// // //       _isLoading = false;
// // //       notifyListeners();
// // //     }
// // //   }

// // //   Future<void> addChatWithUser(String email, String name, String image) async {
// // //     _isLoading = true;
// // //     _errorMessage = null;
// // //     notifyListeners();

// // //     try {
// // //       await _chatRepository.addChatWithUser(email, name, image);
// // //     } catch (e) {
// // //       _errorMessage = 'Failed to add chat: $e';
// // //     } finally {
// // //       _isLoading = false;
// // //       notifyListeners();
// // //     }
// // //   }

// // //   Future<void> deleteChat(String chatId) async {
// // //     _isLoading = true;
// // //     notifyListeners();

// // //     try {
// // //       await _chatRepository.deleteChat(chatId);
// // //       _chats.removeWhere((chat) => chat.id == chatId);
// // //     } catch (e) {
// // //       _errorMessage = 'Failed to delete chat: $e';
// // //     } finally {
// // //       _isLoading = false;
// // //       notifyListeners();
// // //     }
// // //   }

// // //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// // //     if (text.trim().isEmpty) return;

// // //     _errorMessage = null;

// // //     try {
// // //       final now = DateTime.now();
// // //       final formattedTime = _formatTo12Hour(now);
// // //       final message = {
// // //         'text': text.trim(),
// // //         'isMe': isMe,
// // //         'messageId': _uuid.v4(),
// // //         'time': now.toIso8601String(),
// // //       };
// // //       _localMessages.add({
// // //         ...message,
// // //         'time': formattedTime,
// // //         'originalTime': message['time'],
// // //       });
// // //       await _chatRepository.updateMessages(chatId, message);
// // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // //       if (chatIndex != -1) {
// // //         final updatedMessages =
// // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // //               ..add(message);
// // //         _chats[chatIndex] = ChatModel(
// // //           id: _chats[chatIndex].id,
// // //           name: _chats[chatIndex].name,
// // //           message: text,
// // //           time: formattedTime,
// // //           unreadCount: _chats[chatIndex].unreadCount + 1,
// // //           avatar: _chats[chatIndex].avatar,
// // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // //           email: _chats[chatIndex].email,
// // //           messages: updatedMessages,
// // //         );
// // //         notifyListeners();
// // //       }
// // //       _scrollToBottom(attempts: 5);
// // //       _messageController.clear();
// // //     } catch (e) {
// // //       _errorMessage = 'Failed to send message: $e';
// // //       notifyListeners();
// // //     }
// // //   }

// // //   Future<bool> deleteMessage(
// // //       String chatId, Map<String, dynamic> message) async {
// // //     _errorMessage = null;

// // //     try {
// // //       final messageId = message['messageId'] as String;
// // //       print('Attempting to delete message with ID: $messageId');
// // //       await _chatRepository.deleteMessage(chatId, messageId);
// // //       print('Message deletion requested successfully');

// // //       _localMessages.removeWhere((msg) {
// // //         return msg['messageId'] == messageId;
// // //       });

// // //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// // //       if (chatIndex != -1) {
// // //         final updatedMessages =
// // //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// // //               ..removeWhere((msg) {
// // //                 return msg['messageId'] == messageId;
// // //               });
// // //         final lastMessage =
// // //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// // //         print('Updating chat with last message: $lastMessage');
// // //         _chats[chatIndex] = ChatModel(
// // //           id: _chats[chatIndex].id,
// // //           name: _chats[chatIndex].name,
// // //           message: lastMessage,
// // //           time: _chats[chatIndex].time,
// // //           unreadCount: _chats[chatIndex].unreadCount,
// // //           avatar: _chats[chatIndex].avatar,
// // //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// // //           email: _chats[chatIndex].email,
// // //           messages: updatedMessages,
// // //         );
// // //         notifyListeners();
// // //       }

// // //       _listenToMessages(chatId);
// // //       return true;
// // //     } catch (e) {
// // //       print('Error deleting message: $e');
// // //       _errorMessage = 'Failed to delete message: $e';
// // //       notifyListeners();
// // //       return false;
// // //     }
// // //   }

// // //   // Future<void> fetchUserByEmail(String email) async {
// // //   //   if (email.trim().isEmpty) {
// // //   //     _avatarUrl = null;
// // //   //     notifyListeners();
// // //   //     return;
// // //   //   }
// // //   //   try {
// // //   //     final userData = await _chatRepository.getUserByEmail(email);
// // //   //     if (userData != null &&
// // //   //         userData['image'] != null &&
// // //   //         userData['image'].isNotEmpty) {
// // //   //       _avatarUrl = userData['image'] as String;
// // //   //       print('Avatar URL set: $_avatarUrl');
// // //   //     } else {
// // //   //       _avatarUrl = null;
// // //   //       print('No valid image found for email: $email');
// // //   //     }
// // //   //     notifyListeners();
// // //   //   } catch (e) {
// // //   //     print('Error fetching user by email: $e');
// // //   //     _avatarUrl = null;
// // //   //     notifyListeners();
// // //   //   }
// // //   // }

// // //   // @override
// // //   // void dispose() {
// // //   //   _chatSubscription.cancel();
// // //   //   _messagesSubscription?.cancel();
// // //   //   _scrollController.dispose();
// // //   //   _messageController.dispose();
// // //   //   super.dispose();
// // //   // }

// // //   Future<void> fetchUserByEmail(String email) async {
// // //   if (email.trim().isEmpty) {
// // //     _avatarUrl = null;
// // //     notifyListeners();
// // //     return;
// // //   }
// // //   try {
// // //     final userData = await _chatRepository.getUserByEmail(email);
// // //     if (userData != null &&
// // //         userData['image'] != null &&
// // //         userData['image'].isNotEmpty) {
// // //       _avatarUrl = userData['image'] as String;
// // //       print('Avatar URL set: $_avatarUrl');
// // //     } else {
// // //       _avatarUrl = null;
// // //       print('No valid image found for email: $email');
// // //     }
// // //     notifyListeners();
// // //   } catch (e) {
// // //     print('Error fetching user by email: $e');
// // //     _avatarUrl = null;
// // //     notifyListeners();
// // //   }
// // // }
// // // }

// // import 'dart:async';
// // import 'dart:io';
// // import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// // import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// // import 'package:flutter/material.dart';
// // import 'package:uuid/uuid.dart';

// // class ChatViewModel extends ChangeNotifier {
// //   final ChatRepository _chatRepository;
// //   List<ChatModel> _chats = [];
// //   List<ChatModel> _filteredChats = [];
// //   List<Map<String, dynamic>> _localMessages = [];
// //   bool _isLoading = false;
// //   String? _errorMessage;
// //   late StreamSubscription _chatSubscription;
// //   final Uuid _uuid = const Uuid();
// //   final ScrollController _scrollController = ScrollController();
// //   final TextEditingController _messageController = TextEditingController();
// //   StreamSubscription? _messagesSubscription;
// //   String? _avatarUrl;

// //   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
// //   List<Map<String, dynamic>> get localMessages => _localMessages;
// //   bool get isLoading => _isLoading;
// //   String? get errorMessage => _errorMessage;
// //   ScrollController get scrollController => _scrollController;
// //   TextEditingController get messageController => _messageController;
// //   String? get avatarUrl => _avatarUrl;

// //   ChatViewModel(this._chatRepository) {
// //     _startListeningToChats();
// //   }

// //   void _startListeningToChats() {
// //     _isLoading = true;
// //     notifyListeners();

// //     _chatSubscription = _chatRepository.getChatsStream().listen(
// //       (chats) {
// //         _chats = chats;
// //         _filteredChats = [];
// //         _isLoading = false;
// //         _errorMessage = null;
// //         notifyListeners();
// //       },
// //       onError: (e) {
// //         _errorMessage = 'Failed to fetch chats: $e';
// //         _isLoading = false;
// //         notifyListeners();
// //       },
// //     );
// //   }

// //   void initChatMessages(ChatModel chat) {
// //     _localMessages = List.from(chat.messages.map((msg) {
// //       final time = DateTime.parse(msg['time']);
// //       final formattedTime = _formatTo12Hour(time);
// //       return {
// //         ...msg,
// //         'time': formattedTime,
// //         'originalTime': msg['time'],
// //       };
// //     }));
// //     _listenToMessages(chat.id);
// //   }

// //   void _listenToMessages(String chatId) {
// //     _messagesSubscription?.cancel();
// //     _messagesSubscription = _chatRepository.getChatsStream().listen(
// //       (chats) {
// //         final chat = chats.firstWhere(
// //           (c) => c.id == chatId,
// //           orElse: () => ChatModel(
// //             id: chatId,
// //             name: '',
// //             message: '',
// //             time: '',
// //             unreadCount: 0,
// //             avatar: '',
// //             hasCheckmark: false,
// //             email: '',
// //             messages: [],
// //           ),
// //         );
// //         _localMessages = List.from(chat.messages.map((msg) {
// //           final time = DateTime.parse(msg['time']);
// //           final formattedTime = _formatTo12Hour(time);
// //           return {
// //             ...msg,
// //             'time': formattedTime,
// //             'originalTime': msg['time'],
// //           };
// //         }));
// //         notifyListeners();
// //         _scrollToBottom(attempts: 5);
// //       },
// //       onError: (e) {
// //         _errorMessage = 'Failed to load messages: $e';
// //         notifyListeners();
// //       },
// //     );
// //   }

// //   String _formatTo12Hour(DateTime time) {
// //     final hour = time.hour % 12;
// //     final period = time.hour >= 12 ? 'PM' : 'AM';
// //     final minute = time.minute.toString().padLeft(2, '0');
// //     final displayHour = hour == 0 ? 12 : hour;
// //     return '$displayHour:$minute $period';
// //   }

// //   void _scrollToBottom({int attempts = 5}) {
// //     if (attempts <= 0) return;

// //     if (_scrollController.hasClients) {
// //       final currentExtent = _scrollController.position.maxScrollExtent;
// //       _scrollController.animateTo(
// //         currentExtent,
// //         duration: const Duration(milliseconds: 300),
// //         curve: Curves.easeOut,
// //       );
// //       Future.delayed(const Duration(milliseconds: 200), () {
// //         if (_scrollController.hasClients &&
// //             _scrollController.position.maxScrollExtent > currentExtent) {
// //           _scrollToBottom(attempts: attempts - 1);
// //         }
// //       });
// //     } else {
// //       Future.delayed(const Duration(milliseconds: 200), () {
// //         _scrollToBottom(attempts: attempts - 1);
// //       });
// //     }
// //   }

// //   Stream<List<ChatModel>> getChatsStream() {
// //     return _chatRepository.getChatsStream();
// //   }

// //   void filterChats(String query) {
// //     if (query.isEmpty) {
// //       _filteredChats = [];
// //     } else {
// //       _filteredChats = _chats
// //           .where((chat) =>
// //               chat.name.toLowerCase().contains(query.toLowerCase()) ||
// //               chat.message.toLowerCase().contains(query.toLowerCase()))
// //           .toList();
// //     }
// //     notifyListeners();
// //   }

// //   Future<void> createChat({
// //     required String name,
// //     required String message,
// //     required String time,
// //     required int unreadCount,
// //     required String avatar,
// //     required bool hasCheckmark,
// //     File? image,
// //     required String email,
// //   }) async {
// //     _isLoading = true;
// //     _errorMessage = null;
// //     notifyListeners();

// //     try {
// //       final newChat = ChatModel(
// //         id: '',
// //         name: name,
// //         message: message,
// //         time: time,
// //         unreadCount: unreadCount,
// //         avatar: avatar,
// //         hasCheckmark: hasCheckmark,
// //         email: email,
// //         messages: [],
// //       );
// //       final docRef = await _chatRepository.createChat(newChat);
// //       final updatedChat = ChatModel(
// //         id: docRef.id,
// //         name: name,
// //         message: message,
// //         time: time,
// //         unreadCount: unreadCount,
// //         avatar: avatar,
// //         hasCheckmark: hasCheckmark,
// //         email: email,
// //         messages: [],
// //       );
// //       _chats.add(updatedChat);
// //       notifyListeners();
// //     } catch (e) {
// //       _errorMessage = 'Failed to create chat: $e';
// //     } finally {
// //       _isLoading = false;
// //       notifyListeners();
// //     }
// //   }

// //   Future<void> addChatWithUser(String email, String name, String image) async {
// //     _isLoading = true;
// //     _errorMessage = null;
// //     notifyListeners();

// //     try {
// //       await _chatRepository.addChatWithUser(email, name, image);
// //     } catch (e) {
// //       _errorMessage = 'Failed to add chat: $e';
// //     } finally {
// //       _isLoading = false;
// //       notifyListeners();
// //     }
// //   }

// //   Future<void> deleteChat(String chatId) async {
// //     _isLoading = true;
// //     notifyListeners();

// //     try {
// //       await _chatRepository.deleteChat(chatId);
// //       _chats.removeWhere((chat) => chat.id == chatId);
// //     } catch (e) {
// //       _errorMessage = 'Failed to delete chat: $e';
// //     } finally {
// //       _isLoading = false;
// //       notifyListeners();
// //     }
// //   }

// //   Future<void> updateChatName(String chatId, String newName) async {
// //     _isLoading = true;
// //     _errorMessage = null;
// //     notifyListeners();

// //     try {
// //       await _chatRepository.updateChatName(chatId, newName);
// //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// //       if (chatIndex != -1) {
// //         _chats[chatIndex] = ChatModel(
// //           id: _chats[chatIndex].id,
// //           name: newName,
// //           message: _chats[chatIndex].message,
// //           time: _chats[chatIndex].time,
// //           unreadCount: _chats[chatIndex].unreadCount,
// //           avatar: _chats[chatIndex].avatar,
// //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// //           email: _chats[chatIndex].email,
// //           messages: _chats[chatIndex].messages,
// //         );
// //         notifyListeners();
// //       }
// //     } catch (e) {
// //       _errorMessage = 'Failed to update chat name: $e';
// //     } finally {
// //       _isLoading = false;
// //       notifyListeners();
// //     }
// //   }

// //   Future<void> sendMessage(String chatId, String text, bool isMe) async {
// //     if (text.trim().isEmpty) return;

// //     _errorMessage = null;

// //     try {
// //       final now = DateTime.now();
// //       final formattedTime = _formatTo12Hour(now);
// //       final message = {
// //         'text': text.trim(),
// //         'isMe': isMe,
// //         'messageId': _uuid.v4(),
// //         'time': now.toIso8601String(),
// //       };
// //       _localMessages.add({
// //         ...message,
// //         'time': formattedTime,
// //         'originalTime': message['time'],
// //       });
// //       await _chatRepository.updateMessages(chatId, message);
// //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// //       if (chatIndex != -1) {
// //         final updatedMessages =
// //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// //               ..add(message);
// //         _chats[chatIndex] = ChatModel(
// //           id: _chats[chatIndex].id,
// //           name: _chats[chatIndex].name,
// //           message: text,
// //           time: formattedTime,
// //           unreadCount: _chats[chatIndex].unreadCount + 1,
// //           avatar: _chats[chatIndex].avatar,
// //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// //           email: _chats[chatIndex].email,
// //           messages: updatedMessages,
// //         );
// //         notifyListeners();
// //       }
// //       _scrollToBottom(attempts: 5);
// //       _messageController.clear();
// //     } catch (e) {
// //       _errorMessage = 'Failed to send message: $e';
// //       notifyListeners();
// //     }
// //   }

// //   Future<bool> deleteMessage(
// //       String chatId, Map<String, dynamic> message) async {
// //     _errorMessage = null;

// //     try {
// //       final messageId = message['messageId'] as String;
// //       print('Attempting to delete message with ID: $messageId');
// //       await _chatRepository.deleteMessage(chatId, messageId);
// //       print('Message deletion requested successfully');

// //       _localMessages.removeWhere((msg) {
// //         return msg['messageId'] == messageId;
// //       });

// //       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
// //       if (chatIndex != -1) {
// //         final updatedMessages =
// //             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
// //               ..removeWhere((msg) {
// //                 return msg['messageId'] == messageId;
// //               });
// //         final lastMessage =
// //             updatedMessages.isNotEmpty ? updatedMessages.last['text'] : '';
// //         print('Updating chat with last message: $lastMessage');
// //         _chats[chatIndex] = ChatModel(
// //           id: _chats[chatIndex].id,
// //           name: _chats[chatIndex].name,
// //           message: lastMessage,
// //           time: _chats[chatIndex].time,
// //           unreadCount: _chats[chatIndex].unreadCount,
// //           avatar: _chats[chatIndex].avatar,
// //           hasCheckmark: _chats[chatIndex].hasCheckmark,
// //           email: _chats[chatIndex].email,
// //           messages: updatedMessages,
// //         );
// //         notifyListeners();
// //       }

// //       _listenToMessages(chatId);
// //       return true;
// //     } catch (e) {
// //       print('Error deleting message: $e');
// //       _errorMessage = 'Failed to delete message: $e';
// //       notifyListeners();
// //       return false;
// //     }
// //   }

// //   Future<void> fetchUserByEmail(String email) async {
// //     if (email.trim().isEmpty) {
// //       _avatarUrl = null;
// //       notifyListeners();
// //       return;
// //     }
// //     try {
// //       final userData = await _chatRepository.getUserByEmail(email);
// //       if (userData != null &&
// //           userData['image'] != null &&
// //           userData['image'].isNotEmpty) {
// //         _avatarUrl = userData['image'] as String;
// //         print('Avatar URL set: $_avatarUrl');
// //       } else {
// //         _avatarUrl = null;
// //         print('No valid image found for email: $email');
// //       }
// //       notifyListeners();
// //     } catch (e) {
// //       print('Error fetching user by email: $e');
// //       _avatarUrl = null;
// //       notifyListeners();
// //     }
// //   }

// //   @override
// //   void dispose() {
// //     _chatSubscription.cancel();
// //     _messagesSubscription?.cancel();
// //     _scrollController.dispose();
// //     _messageController.dispose();
// //     super.dispose();
// //   }
// // }

// import 'dart:async';
// import 'dart:io';
// import 'package:attendance_app/features/chats/data/models/chat_model.dart';
// import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:firebase_auth/firebase_auth.dart';
// import 'package:flutter/material.dart';
// import 'package:uuid/uuid.dart';

// class ChatViewModel extends ChangeNotifier {
//   final ChatRepository _chatRepository;
//   List<ChatModel> _chats = [];
//   List<ChatModel> _filteredChats = [];
//   List<Map<String, dynamic>> _localMessages = [];
//   bool _isLoading = false;
//   String? _errorMessage;
//   late StreamSubscription _chatSubscription;
//   final Uuid _uuid = const Uuid();
//   final ScrollController _scrollController = ScrollController();
//   final TextEditingController _messageController = TextEditingController();
//   StreamSubscription? _messagesSubscription;
//   String? _avatarUrl;

//   List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
//   List<Map<String, dynamic>> get localMessages => _localMessages;
//   bool get isLoading => _isLoading;
//   String? get errorMessage => _errorMessage;
//   ScrollController get scrollController => _scrollController;
//   TextEditingController get messageController => _messageController;
//   String? get avatarUrl => _avatarUrl;

//   ChatViewModel(this._chatRepository) {
//     _startListeningToChats();
//   }

//   void _startListeningToChats() {
//     _isLoading = true;
//     notifyListeners();

//     _chatSubscription = _chatRepository.getChatsStream().listen(
//       (chats) {
//         _chats = chats;
//         _filteredChats = [];
//         _isLoading = false;
//         _errorMessage = null;
//         notifyListeners();
//       },
//       onError: (e) {
//         _errorMessage = 'Failed to fetch chats: $e';
//         _isLoading = false;
//         notifyListeners();
//       },
//     );
//   }

//   void initChatMessages(ChatModel chat) {
//     _localMessages = List.from(chat.messages.map((msg) {
//       final time = DateTime.parse(msg['time']);
//       final formattedTime = _formatTo12Hour(time);
//       return {
//         ...msg,
//         'time': formattedTime,
//         'originalTime': msg['time'],
//       };
//     }));
//     _listenToMessages(chat.id);
//   }

//   void _listenToMessages(String chatId) {
//     _messagesSubscription?.cancel();
//     _messagesSubscription = _chatRepository.getChatsStream().listen(
//       (chats) {
//         final chat = chats.firstWhere(
//           (c) => c.id == chatId,
//           orElse: () => ChatModel(
//             id: chatId,
//             name: '',
//             message: '',
//             time: '',
//             unreadCount: 0,
//             avatar: '',
//             hasCheckmark: false,
//             email: '',
//             messages: [],
//           ),
//         );
//         _localMessages = List.from(chat.messages.map((msg) {
//           final time = DateTime.parse(msg['time']);
//           final formattedTime = _formatTo12Hour(time);
//           return {
//             ...msg,
//             'time': formattedTime,
//             'originalTime': msg['time'],
//           };
//         }));
//         notifyListeners();
//         _scrollToBottom(attempts: 5);
//       },
//       onError: (e) {
//         _errorMessage = 'Failed to load messages: $e';
//         notifyListeners();
//       },
//     );
//   }

//   // String _formatTo12Hour(DateTime time) {
//   //   final hour = time.hour % 12 == 0 ? 12 : time.hour % 12;
//   //   final period = time.hour >= 12 ? 'PM' : 'AM';
//   //   final minute = time.minute.toString().padLeft(2, '0');
//   //   return '$hour:$minute $period';
//   // }

//   // String _formatTo12Hour(DateTime time) {
//   //   final hour = time.hour % 12 == 0 ? 12 : time.hour % 12;
//   //   final minute = time.minute.toString().padLeft(2, '0');
//   //   final period = time.hour >= 12 ? 'PM' : 'AM';
//   //   return '${hour.toString().padLeft(2, '0')}:$minute $period';
//   // }

//   String _formatTo12Hour(DateTime time) {
//     final hour = time.hour % 12 == 0 ? 12 : time.hour % 12;
//     final minute = time.minute.toString().padLeft(2, '0');
//     final period = time.hour >= 12 ? 'PM' : 'AM';
//     return '${hour.toString().padLeft(2, '0')}:$minute $period';
//   }

//   void _scrollToBottom({int attempts = 5}) {
//     if (attempts <= 0) return;

//     if (_scrollController.hasClients) {
//       final currentExtent = _scrollController.position.maxScrollExtent;
//       _scrollController.animateTo(
//         currentExtent,
//         duration: const Duration(milliseconds: 300),
//         curve: Curves.easeOut,
//       );
//       Future.delayed(const Duration(milliseconds: 200), () {
//         if (_scrollController.hasClients &&
//             _scrollController.position.maxScrollExtent > currentExtent) {
//           _scrollToBottom(attempts: attempts - 1);
//         }
//       });
//     } else {
//       Future.delayed(const Duration(milliseconds: 200), () {
//         _scrollToBottom(attempts: attempts - 1);
//       });
//     }
//   }

//   Stream<List<ChatModel>> getChatsStream() {
//     return _chatRepository.getChatsStream();
//   }

//   void filterChats(String query) {
//     if (query.isEmpty) {
//       _filteredChats = [];
//     } else {
//       _filteredChats = _chats
//           .where((chat) =>
//               chat.name.toLowerCase().contains(query.toLowerCase()) ||
//               chat.message.toLowerCase().contains(query.toLowerCase()))
//           .toList();
//     }
//     notifyListeners();
//   }

//   Future<void> createChat({
//     required String name,
//     required String message,
//     required String time,
//     required int unreadCount,
//     required String avatar,
//     required bool hasCheckmark,
//     File? image,
//     required String email,
//   }) async {
//     _isLoading = true;
//     _errorMessage = null;
//     notifyListeners();

//     try {
//       final newChat = ChatModel(
//         id: '',
//         name: name,
//         message: message,
//         time: time,
//         unreadCount: unreadCount,
//         avatar: avatar,
//         hasCheckmark: hasCheckmark,
//         email: email,
//         messages: [],
//       );
//       final docRef = await _chatRepository.createChat(newChat);
//       final updatedChat = ChatModel(
//         id: docRef.id,
//         name: name,
//         message: message,
//         time: time,
//         unreadCount: unreadCount,
//         avatar: avatar,
//         hasCheckmark: hasCheckmark,
//         email: email,
//         messages: [],
//       );
//       _chats.add(updatedChat);
//       notifyListeners();
//     } catch (e) {
//       _errorMessage = 'Failed to create chat: $e';
//     } finally {
//       _isLoading = false;
//       notifyListeners();
//     }
//   }

//   Future<void> addChatWithUser(String email, String name, String image) async {
//     _isLoading = true;
//     _errorMessage = null;
//     notifyListeners();

//     try {
//       await _chatRepository.addChatWithUser(email, name, image);
//     } catch (e) {
//       _errorMessage = 'Failed to add chat: $e';
//     } finally {
//       _isLoading = false;
//       notifyListeners();
//     }
//   }

//   Future<void> deleteChat(String chatId) async {
//     _isLoading = true;
//     notifyListeners();

//     try {
//       await _chatRepository.deleteChat(chatId);
//       _chats.removeWhere((chat) => chat.id == chatId);
//     } catch (e) {
//       _errorMessage = 'Failed to delete chat: $e';
//     } finally {
//       _isLoading = false;
//       notifyListeners();
//     }
//   }

//   Future<void> updateChatName(String chatId, String newName) async {
//     _isLoading = true;
//     _errorMessage = null;
//     notifyListeners();

//     try {
//       await _chatRepository.updateChatName(chatId, newName);
//       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
//       if (chatIndex != -1) {
//         _chats[chatIndex] = ChatModel(
//           id: _chats[chatIndex].id,
//           name: newName,
//           message: _chats[chatIndex].message,
//           time: _chats[chatIndex].time,
//           unreadCount: _chats[chatIndex].unreadCount,
//           avatar: _chats[chatIndex].avatar,
//           hasCheckmark: _chats[chatIndex].hasCheckmark,
//           email: _chats[chatIndex].email,
//           messages: _chats[chatIndex].messages,
//         );
//         notifyListeners();
//       }
//     } catch (e) {
//       _errorMessage = 'Failed to update chat name: $e';
//     } finally {
//       _isLoading = false;
//       notifyListeners();
//     }
//   }

//   Future<void> sendMessage(String chatId, String text, bool isMe,
//       {bool isImage = false}) async {
//     if (text.trim().isEmpty && !isImage) return;

//     _errorMessage = null;
//     notifyListeners();

//     // تعريف message خارج الـ try block
//     late Map<String, dynamic> message;

//     try {
//       final now = DateTime.now();
//       final formattedTime = _formatTo12Hour(now);
//       message = {
//         'text': text.trim(),
//         'isMe': isMe,
//         'messageId': _uuid.v4(),
//         'time': now.toIso8601String(),
//         'isImage': isImage, // تحديد إذا كانت الرسالة صورة
//       };

//       // إضافة الرسالة محليًا لتحديث الواجهة فورًا
//       _localMessages.add({
//         ...message,
//         'time': formattedTime,
//         'originalTime': message['time'],
//       });

//       // تحديث الرسائل في Firestore
//       await _chatRepository.updateMessages(chatId, message);

//       // تحديث بيانات المحادثة في _chats
//       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
//       if (chatIndex != -1) {
//         final updatedMessages =
//             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
//               ..add(message);
//         _chats[chatIndex] = ChatModel(
//           id: _chats[chatIndex].id,
//           name: _chats[chatIndex].name,
//           message: isImage ? 'Photo' : text, // لو صورة، آخر رسالة تكون "Photo"
//           time: formattedTime,
//           unreadCount: _chats[chatIndex].unreadCount + 1,
//           avatar: _chats[chatIndex].avatar,
//           hasCheckmark: _chats[chatIndex].hasCheckmark,
//           email: _chats[chatIndex].email,
//           messages: updatedMessages,
//         );

//         // تحديث حقل message في Firestore مباشرة
//         await FirebaseFirestore.instance
//             .collection('users_chats')
//             .doc(chatId)
//             .update({
//           'message': isImage ? 'Photo' : text,
//           'time': formattedTime,
//           'unreadCount': _chats[chatIndex].unreadCount + 1,
//         });
//       }

//       // تحديث الواجهة والتمرير للأسفل
//       notifyListeners();
//       _scrollToBottom(attempts: 5);
//       _messageController.clear();
//     } catch (e) {
//       _errorMessage = 'Failed to send message: $e';
//       // إزالة الرسالة من localMessages لو حصل خطأ
//       _localMessages
//           .removeWhere((msg) => msg['messageId'] == message['messageId']);
//       notifyListeners();
//     }
//   }

//   Future<bool> deleteMessage(
//       String chatId, Map<String, dynamic> message) async {
//     _errorMessage = null;
//     try {
//       final messageId = message['messageId'] as String;
//       print('Attempting to delete message with ID: $messageId');
//       await _chatRepository.deleteMessage(chatId, messageId);
//       print('Message deletion requested successfully');

//       _localMessages.removeWhere((msg) {
//         return msg['messageId'] == messageId;
//       });

//       final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
//       if (chatIndex != -1) {
//         final updatedMessages =
//             List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
//               ..removeWhere((msg) {
//                 return msg['messageId'] == messageId;
//               });

//         // تحديد آخر رسالة
//         String lastMessage = '';
//         String lastMessageTime = '';
//         if (updatedMessages.isNotEmpty) {
//           final lastMsg = updatedMessages.last;
//           lastMessage = lastMsg['isImage'] == true ? 'Photo' : lastMsg['text'];
//           lastMessageTime = _formatTo12Hour(DateTime.parse(lastMsg['time']));
//         }

//         print('Updating chat with last message: $lastMessage');
//         _chats[chatIndex] = ChatModel(
//           id: _chats[chatIndex].id,
//           name: _chats[chatIndex].name,
//           message: lastMessage,
//           time: lastMessageTime,
//           unreadCount: _chats[chatIndex].unreadCount,
//           avatar: _chats[chatIndex].avatar,
//           hasCheckmark: _chats[chatIndex].hasCheckmark,
//           email: _chats[chatIndex].email,
//           messages: updatedMessages,
//         );

//         // تحديث Firestore مباشرة
//         await FirebaseFirestore.instance
//             .collection('users_chats')
//             .doc(chatId)
//             .update({
//           'message': lastMessage,
//           'time': lastMessageTime,
//           'messages': updatedMessages,
//         });

//         notifyListeners();
//       }

//       _listenToMessages(chatId);
//       return true;
//     } catch (e) {
//       print('Error deleting message: $e');
//       _errorMessage = 'Failed to delete message: $e';
//       notifyListeners();
//       return false;
//     }
//   }

//   Future<bool> checkIfChatExists(String email) async {
//     try {
//       final currentUser = FirebaseAuth.instance.currentUser;
//       if (currentUser == null) return false;
//       return await _chatRepository.checkIfChatExists(currentUser.uid, email);
//     } catch (e) {
//       _errorMessage = 'Error checking chat existence: $e';
//       notifyListeners();
//       return false;
//     }
//   }

//   Future<void> fetchUserByEmail(String email) async {
//     if (email.trim().isEmpty) {
//       _avatarUrl = null;
//       notifyListeners();
//       return;
//     }
//     try {
//       final userData = await _chatRepository.getUserByEmail(email);
//       if (userData != null &&
//           userData['image'] != null &&
//           userData['image'].isNotEmpty) {
//         _avatarUrl = userData['image'] as String;
//         print('Avatar URL set: $_avatarUrl');
//       } else {
//         _avatarUrl = null;
//         print('No valid image found for email: $email');
//       }
//       notifyListeners();
//     } catch (e) {
//       print('Error fetching user by email: $e');
//       _avatarUrl = null;
//       notifyListeners();
//     }
//   }

//   @override
//   void dispose() {
//     _chatSubscription.cancel();
//     _messagesSubscription?.cancel();
//     _scrollController.dispose();
//     _messageController.dispose();
//     super.dispose();
//   }
// }

import 'dart:async';
import 'dart:io';
import 'package:attendance_app/features/chats/data/models/chat_model.dart';
import 'package:attendance_app/features/chats/data/repositories/chat_repository.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:uuid/uuid.dart';

class ChatViewModel extends ChangeNotifier {
  final ChatRepository _chatRepository;
  List<ChatModel> _chats = [];
  List<ChatModel> _filteredChats = [];
  List<Map<String, dynamic>> _localMessages = [];
  bool _isLoading = false;
  String? _errorMessage;
  late StreamSubscription _chatSubscription;
  final Uuid _uuid = const Uuid();
  final ScrollController _scrollController = ScrollController();
  final TextEditingController _messageController = TextEditingController();
  StreamSubscription? _messagesSubscription;
  String? _avatarUrl;

  List<ChatModel> get chats => _filteredChats.isEmpty ? _chats : _filteredChats;
  List<Map<String, dynamic>> get localMessages => _localMessages;
  bool get isLoading => _isLoading;
  String? get errorMessage => _errorMessage;
  ScrollController get scrollController => _scrollController;
  TextEditingController get messageController => _messageController;
  String? get avatarUrl => _avatarUrl;

  ChatViewModel(this._chatRepository) {
    _startListeningToChats();
  }

  void _startListeningToChats() {
    _isLoading = true;
    notifyListeners();

    _chatSubscription = _chatRepository.getChatsStream().listen(
      (chats) {
        _chats = chats;
        _filteredChats = [];
        _isLoading = false;
        _errorMessage = null;
        notifyListeners();
      },
      onError: (e) {
        _errorMessage = 'فشل تحميل الشاتات: $e';
        _isLoading = false;
        notifyListeners();
      },
    );
  }

  // void initChatMessages(ChatModel chat) {
  //   _localMessages = List.from(chat.messages.map((msg) {
  //     final time = DateTime.parse(msg['time']);
  //     final formattedTime = _formatTo12Hour(time);
  //     return {
  //       ...msg,
  //       'time': formattedTime,
  //       'originalTime': msg['time'],
  //     };
  //   }));
  //   _listenToMessages(chat.id);
  // }

  // void _listenToMessages(String chatId) {
  //   _messagesSubscription?.cancel();
  //   _messagesSubscription = _chatRepository.getChatsStream().listen(
  //     (chats) {
  //       final chat = chats.firstWhere(
  //         (c) => c.id == chatId,
  //         orElse: () => ChatModel(
  //           id: chatId,
  //           userId: '',
  //           name: '',
  //           message: '',
  //           time: '',
  //           unreadCount: 0,
  //           avatar: '',
  //           hasCheckmark: false,
  //           email: '',
  //           messages: [],
  //         ),
  //       );
  //       _localMessages = List.from(chat.messages.map((msg) {
  //         final time = DateTime.parse(msg['time']);
  //         final formattedTime = _formatTo12Hour(time);
  //         return {
  //           ...msg,
  //           'time': formattedTime,
  //           'originalTime': msg['time'],
  //         };
  //       }));
  //       notifyListeners();
  //       _scrollToBottom(attempts: 5);
  //     },
  //     onError: (e) {
  //       _errorMessage = 'فشل تحميل الرسائل: $e';
  //       notifyListeners();
  //     },
  //   );
  // }

  void initChatMessages(ChatModel chat) {
    _localMessages = List.from(chat.messages.map((msg) {
      String formattedTime;
      if (msg['time'] != null &&
          RegExp(r'^\d{2}:\d{2}\s(?:AM|PM)$').hasMatch(msg['time'])) {
        formattedTime = msg['time'];
      } else if (msg['originalTime'] != null) {
        final time = DateTime.parse(msg['originalTime']);
        formattedTime = _formatTo12Hour(time);
      } else {
        final time = DateTime.parse(msg['time']);
        formattedTime = _formatTo12Hour(time);
      }
      return {
        ...msg,
        'time': formattedTime,
        'originalTime': msg['originalTime'] ?? msg['time'],
      };
    }));
    _listenToMessages(chat.id);
  }

  void _listenToMessages(String chatId) {
    _messagesSubscription?.cancel();
    _messagesSubscription = _chatRepository.getChatsStream().listen(
      (chats) {
        final chat = chats.firstWhere(
          (c) => c.id == chatId,
          orElse: () => ChatModel(
            id: chatId,
            userId: '',
            name: '',
            message: '',
            time: '',
            timestamp: null,
            unreadCount: 0,
            avatar: '',
            hasCheckmark: false,
            email: '',
            messages: [],
          ),
        );
        _localMessages = List.from(chat.messages.map((msg) {
          String formattedTime;
          if (msg['time'] != null &&
              RegExp(r'^\d{2}:\d{2}\s(?:AM|PM)$').hasMatch(msg['time'])) {
            formattedTime = msg['time'];
          } else if (msg['originalTime'] != null) {
            final time = DateTime.parse(msg['originalTime']);
            formattedTime = _formatTo12Hour(time);
          } else {
            final time = DateTime.parse(msg['time']);
            formattedTime = _formatTo12Hour(time);
          }
          return {
            ...msg,
            'time': formattedTime,
            'originalTime': msg['originalTime'] ?? msg['time'],
          };
        }));
        notifyListeners();
        _scrollToBottom(attempts: 5);
      },
      onError: (e) {
        _errorMessage = 'Failed to load messages: $e';
        notifyListeners();
      },
    );
  }

  String _formatTo12Hour(DateTime time) {
    final hour = time.hour % 12 == 0 ? 12 : time.hour % 12;
    final minute = time.minute.toString().padLeft(2, '0');
    final period = time.hour >= 12 ? 'PM' : 'AM';
    return '${hour.toString().padLeft(2, '0')}:$minute $period';
  }

  void _scrollToBottom({int attempts = 5}) {
    if (attempts <= 0) return;

    if (_scrollController.hasClients) {
      final currentExtent = _scrollController.position.maxScrollExtent;
      _scrollController.animateTo(
        currentExtent,
        duration: const Duration(milliseconds: 300),
        curve: Curves.easeOut,
      );
      Future.delayed(const Duration(milliseconds: 200), () {
        if (_scrollController.hasClients &&
            _scrollController.position.maxScrollExtent > currentExtent) {
          _scrollToBottom(attempts: attempts - 1);
        }
      });
    } else {
      Future.delayed(const Duration(milliseconds: 200), () {
        _scrollToBottom(attempts: attempts - 1);
      });
    }
  }

  Stream<List<ChatModel>> getChatsStream() {
    return _chatRepository.getChatsStream();
  }

  void filterChats(String query) {
    if (query.isEmpty) {
      _filteredChats = [];
    } else {
      _filteredChats = _chats
          .where((chat) =>
              chat.name.toLowerCase().contains(query.toLowerCase()) ||
              chat.message.toLowerCase().contains(query.toLowerCase()))
          .toList();
    }
    notifyListeners();
  }

  Future<void> createChat({
    required String name,
    required String message,
    required String time,
    required int unreadCount,
    required String avatar,
    required bool hasCheckmark,
    File? image,
    required String email,
  }) async {
    _isLoading = true;
    _errorMessage = null;
    notifyListeners();

    try {
      final currentUser = FirebaseAuth.instance.currentUser;
      if (currentUser == null) {
        throw Exception('لا يوجد مستخدم مسجل دخول');
      }

      final newChat = ChatModel(
        id: '',
        userId: currentUser.uid, // أضفنا userId
        name: name,
        message: message,
        time: time,
        unreadCount: unreadCount,
        avatar: avatar,
        hasCheckmark: hasCheckmark,
        email: email,
        messages: [],
      );
      final docRef = await _chatRepository.createChat(newChat);
      final updatedChat = ChatModel(
        id: docRef.id,
        userId: currentUser.uid, // أضفنا userId
        name: name,
        message: message,
        time: time,
        unreadCount: unreadCount,
        avatar: avatar,
        hasCheckmark: hasCheckmark,
        email: email,
        messages: [],
      );
      _chats.add(updatedChat);
      notifyListeners();
    } catch (e) {
      _errorMessage = 'فشل إنشاء الشات: $e';
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }

  Future<void> addChatWithUser(String email, String name, String image) async {
    _isLoading = true;
    _errorMessage = null;
    notifyListeners();

    try {
      await _chatRepository.addChatWithUser(email, name, image);
    } catch (e) {
      _errorMessage = 'A chat with this email already exists.';
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }

  Future<void> deleteChat(String chatId) async {
    _isLoading = true;
    notifyListeners();

    try {
      await _chatRepository.deleteChat(chatId);
      _chats.removeWhere((chat) => chat.id == chatId);
    } catch (e) {
      _errorMessage = 'فشل حذف الشات: $e';
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }

  Future<void> updateChatName(String chatId, String newName) async {
    _isLoading = true;
    _errorMessage = null;
    notifyListeners();

    try {
      await _chatRepository.updateChatName(chatId, newName);
      final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
      if (chatIndex != -1) {
        _chats[chatIndex] = ChatModel(
          id: _chats[chatIndex].id,
          userId: _chats[chatIndex].userId, // أضفنا userId
          name: newName,
          message: _chats[chatIndex].message,
          time: _chats[chatIndex].time,
          unreadCount: _chats[chatIndex].unreadCount,
          avatar: _chats[chatIndex].avatar,
          hasCheckmark: _chats[chatIndex].hasCheckmark,
          email: _chats[chatIndex].email,
          messages: _chats[chatIndex].messages,
        );
        notifyListeners();
      }
    } catch (e) {
      _errorMessage = 'فشل تحديث اسم الشات: $e';
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }

  Future<void> sendMessage(String chatId, String text, bool isMe,
      {bool isImage = false}) async {
    if (text.trim().isEmpty && !isImage) return;

    _errorMessage = null;
    notifyListeners();

    late Map<String, dynamic> message;

    try {
      final now = DateTime.now();
      final formattedTime = _formatTo12Hour(now);
      message = {
        'text': text.trim(),
        'isMe': isMe,
        'messageId': _uuid.v4(),
        //'time': formattedTime, // تخزين الوقت بتنسيق 12 ساعة
        'time': now.toIso8601String(),
        'isImage': isImage,
      };

      _localMessages.add({
        ...message,
        'time': formattedTime,
        'originalTime': message['time'],
        // 'originalTime': now.toIso8601String(), // للتوافق مع Firestore
      });

      await _chatRepository.updateMessages(chatId, message);

      final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
      if (chatIndex != -1) {
        final updatedMessages =
            List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
              ..add(message);
        _chats[chatIndex] = ChatModel(
          id: _chats[chatIndex].id,
          userId: _chats[chatIndex].userId, // أضفنا userId
          name: _chats[chatIndex].name,
          message: isImage ? 'Photo' : text,
          time: formattedTime,
          timestamp: now, // تحديث الـ timestamp
          unreadCount: _chats[chatIndex].unreadCount + 1,
          avatar: _chats[chatIndex].avatar,
          hasCheckmark: _chats[chatIndex].hasCheckmark,
          email: _chats[chatIndex].email,
          messages: updatedMessages,
        );

        await FirebaseFirestore.instance
            .collection('users_chats')
            .doc(chatId)
            .update({
          'message': isImage ? 'Photo' : text,
          'time': formattedTime,
          'unreadCount': _chats[chatIndex].unreadCount + 1,
        });
      }

      notifyListeners();
      _scrollToBottom(attempts: 5);
      _messageController.clear();
    } catch (e) {
      _errorMessage = 'فشل إرسال الرسالة: $e';
      _localMessages
          .removeWhere((msg) => msg['messageId'] == message['messageId']);
      notifyListeners();
    }
  }

  // Future<bool> deleteMessage(
  //     String chatId, Map<String, dynamic> message) async {
  //   _errorMessage = null;
  //   try {
  //     final messageId = message['messageId'] as String;
  //     print('محاولة حذف الرسالة بمعرف: $messageId');
  //     await _chatRepository.deleteMessage(chatId, messageId);
  //     print('تم طلب حذف الرسالة بنجاح');

  //     _localMessages.removeWhere((msg) {
  //       return msg['messageId'] == messageId;
  //     });

  //     final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
  //     if (chatIndex != -1) {
  //       final updatedMessages =
  //           List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
  //             ..removeWhere((msg) {
  //               return msg['messageId'] == messageId;
  //             });

  //       String lastMessage = '';
  //       String lastMessageTime = '';
  //       if (updatedMessages.isNotEmpty) {
  //         final lastMsg = updatedMessages.last;
  //         lastMessage = lastMsg['isImage'] == true ? 'Photo' : lastMsg['text'];
  //         lastMessageTime = _formatTo12Hour(DateTime.parse(lastMsg['time']));
  //       }

  //       print('تحديث الشات بآخر رسالة: $lastMessage');
  //       _chats[chatIndex] = ChatModel(
  //         id: _chats[chatIndex].id,
  //         userId: _chats[chatIndex].userId, // أضفنا userId
  //         name: _chats[chatIndex].name,
  //         message: lastMessage,
  //         time: lastMessageTime,
  //         unreadCount: _chats[chatIndex].unreadCount,
  //         avatar: _chats[chatIndex].avatar,
  //         hasCheckmark: _chats[chatIndex].hasCheckmark,
  //         email: _chats[chatIndex].email,
  //         messages: updatedMessages,
  //       );

  //       await FirebaseFirestore.instance
  //           .collection('users_chats')
  //           .doc(chatId)
  //           .update({
  //         'message': lastMessage,
  //         'time': lastMessageTime,
  //         'messages': updatedMessages,
  //       });

  //       notifyListeners();
  //     }

  //     _listenToMessages(chatId);
  //     return true;
  //   } catch (e) {
  //     print('خطأ في حذف الرسالة: $e');
  //     _errorMessage = 'فشل حذف الرسالة: $e';
  //     notifyListeners();
  //     return false;
  //   }
  // }

  Future<bool> deleteMessage(
      String chatId, Map<String, dynamic> message) async {
    _errorMessage = null;
    try {
      final messageId = message['messageId'] as String;
      print('Attempting to delete message with ID: $messageId');
      await _chatRepository.deleteMessage(chatId, messageId);
      print('Message deletion requested successfully');

      _localMessages.removeWhere((msg) {
        return msg['messageId'] == messageId;
      });

      final chatIndex = _chats.indexWhere((chat) => chat.id == chatId);
      if (chatIndex != -1) {
        final updatedMessages =
            List<Map<String, dynamic>>.from(_chats[chatIndex].messages)
              ..removeWhere((msg) {
                return msg['messageId'] == messageId;
              });

        String lastMessage = '';
        String lastMessageTime = '';
        DateTime? lastTimestamp;
        if (updatedMessages.isNotEmpty) {
          final lastMsg = updatedMessages.last;
          lastMessage = lastMsg['isImage'] == true ? 'Photo' : lastMsg['text'];
          if (lastMsg['originalTime'] != null) {
            lastTimestamp = DateTime.parse(lastMsg['originalTime']);
            lastMessageTime = _formatTo12Hour(lastTimestamp);
          } else {
            lastMessageTime = lastMsg['time'];
            lastTimestamp = DateTime.parse(lastMsg['time']);
          }
        }

        print('Updating chat with last message: $lastMessage');
        _chats[chatIndex] = ChatModel(
          id: _chats[chatIndex].id,
          userId: _chats[chatIndex].userId,
          name: _chats[chatIndex].name,
          message: lastMessage,
          time: lastMessageTime,
          timestamp: lastTimestamp,
          unreadCount: _chats[chatIndex].unreadCount,
          avatar: _chats[chatIndex].avatar,
          hasCheckmark: _chats[chatIndex].hasCheckmark,
          email: _chats[chatIndex].email,
          messages: updatedMessages,
        );

        await FirebaseFirestore.instance
            .collection('users_chats')
            .doc(chatId)
            .update({
          'message': lastMessage,
          'time': lastMessageTime,
          'messages': updatedMessages,
        });

        notifyListeners();
      }

      _listenToMessages(chatId);
      return true;
    } catch (e) {
      print('Error deleting message: $e');
      _errorMessage = 'Failed to delete message: $e';
      notifyListeners();
      return false;
    }
  }

  Future<bool> checkIfChatExists(String email) async {
    try {
      final currentUser = FirebaseAuth.instance.currentUser;
      if (currentUser == null) return false;
      return await _chatRepository.checkIfChatExists(currentUser.uid, email);
    } catch (e) {
      _errorMessage = 'خطأ في التحقق من وجود الشات: $e';
      notifyListeners();
      return false;
    }
  }

  Future<void> fetchUserByEmail(String email) async {
    if (email.trim().isEmpty) {
      _avatarUrl = null;
      notifyListeners();
      return;
    }
    try {
      final userData = await _chatRepository.getUserByEmail(email);
      if (userData != null &&
          userData['image'] != null &&
          userData['image'].isNotEmpty) {
        _avatarUrl = userData['image'] as String;
        print('تم تعيين رابط الصورة: $_avatarUrl');
      } else {
        _avatarUrl = null;
        print('لم يتم العثور على صورة صالحة للبريد: $email');
      }
      notifyListeners();
    } catch (e) {
      print('خطأ في جلب المستخدم بالبريد: $e');
      _avatarUrl = null;
      notifyListeners();
    }
  }

  @override
  void dispose() {
    _chatSubscription.cancel();
    _messagesSubscription?.cancel();
    _scrollController.dispose();
    _messageController.dispose();
    super.dispose();
  }
}
